{"version":3,"sources":["components/page-commands.tsx","components/styled.tsx","lib/models-inventory.tsx","pages/management/inventory/landing-page/index.tsx","components/data-select/warehouse-select.tsx","components/amount-field.tsx","components/data-select/account-select.tsx","assets/confirmed.png","components/data-select/inventory-select.tsx","pages/management/inventory/account-order/list.tsx","pages/management/inventory/account-order/form.tsx","pages/management/inventory/account-order/create.tsx","pages/management/inventory/account-order/edit.tsx","pages/management/inventory/account-order/items-view.tsx","pages/management/inventory/account-order/view.tsx","pages/management/inventory/account-order/items.tsx","pages/management/inventory/account-order/index.tsx"],"names":["PageCommands","props","className","children","StyledBadge","withStyles","theme","createStyles","badge","right","top","border","palette","background","paper","padding","backgroundColor","color","Badge","ConfirmedBadge","StyledViewPage","classes","makeStyles","root","flexGrow","spacing","text","secondary","minHeight","position","useViewPageStyles","StyledViewField","height","maxWidth","fontSize","borderBottom","InlineList","align","wrap","textAlign","whiteSpace","margin","paddingInlineStart","listStyle","display","verticalAlign","useStyles","InlineListItem","width","useClickableStyle","cursor","Unit","id","unit","Category","category","Warehouse","warehouse","accountNo","account","Stock","stockName","description","unitId","categoryId","InventoryDoc","docDate","Date","warehouseId","remarks","isConfirmed","dateConfirmed","conrirmedByProfileId","confirmedBy","itemCount","Delivery","poNo","drNo","amount","supplier","PriceList","AccountOrder","orNo","WarehouseOrder","toWarehouseId","toWarehouse","LandingMenu","go","useNavigation","onClick","Landing","WarehouseSelect","value","onChange","refresh","inputLabel","req","useRequest","useState","data","setData","val","setValue","inputValue","setInputValue","getList","a","get","process","res","success","useEffect","event","newValue","undefined","onInputChange","options","getOptionLabel","option","renderInput","params","label","required","defaultProps","AmountField","FDouble","Number","v","setV","tfProps","e","isNaN","target","n","parseFloat","zeroIsAllowed","onBlur","s","replace","finalValue","onFinalChange","AccountSelect","getLabel","profile","name","email","appBar","title","marginLeft","flex","Transition","forwardRef","ref","direction","InventorySelect","date","selectedIds","FDateCustom","columns","field","headerName","valueGetter","row","stock","headerAlign","valueFormatter","selectionModel","setSelectionModel","rows","filter","x","find","y","hideFooterPagination","autoHeight","checkboxSelection","onSelectionModelChange","newSelection","selectedStocks","InventorySelectDialog","open","setOpen","onSelectionConfirmed","nc","useContext","NotificationContext","selection","setSelection","handleClose","handleApply","length","msgbox","show","onClose","fullScreen","TransitionComponent","edge","variant","deleteRecord","g","callback","confirmbox","post","snackbar","dummyButton","IconButton","size","disabled","style","visibility","List","ps","PageStateContext","useGlobal","openData","mode","Get","dispatch","FDate","renderCell","Tooltip","getValue","tt","Box","badgeContent","filterable","sortable","disableColumnMenu","cellClassName","confirmed","parent","openItems","FDateTime","Button","Form","onSubmit","formRef","useRef","setDocDate","setORNo","setDescription","setAccount","setRemarks","execSubmit","setExecSubmit","Add","key","handleSubmit","preventDefault","current","reportValidity","errors","newData","getData","autoComplete","FormControl","FormLabel","TextField","type","multiline","Create","processing","backToView","hide","Edit","ItemsView","parentId","totalAmount","totalPointValue","forEach","FCurrency","opaity","View","items","setItems","getInventory","validate","inv","push","stockId","qty","_inv","q","backToList","confirm","Profile","src","ConfirmedImage","Grid","container","item","sm","fontWeight","rank","Divider","d","Items","dataBak","setDataBak","JSON","parse","stringify","saveList","openInventorySelection","setOpenInventorySelection","fieldName","disableSelectionOnClick","map","maxId","lst","sort","reverse","newItems","i","price","pointValue","discountRate","discount","_data","RenderCell","inputProps","ds","parseInt","pageMode","setPageMode","openProps","setOpenProps","warehouseCookie","sessionStorage","getItem","setWarehouse","setItem","removeItem"],"mappings":"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","file":"static/js/11.c28d6042.chunk.js","sourcesContent":["import { FC } from \"react\";\r\n\r\nconst PageCommands: FC = (props) => {\r\n\treturn <div className=\"page-commands\">{props.children}</div>;\r\n};\r\n\r\nexport default PageCommands;\r\n","import {\r\n\tBadge,\r\n\tcreateStyles,\r\n\tmakeStyles,\r\n\tPaper,\r\n\tTheme,\r\n\twithStyles,\r\n} from \"@material-ui/core\";\r\nimport { Label } from \"@material-ui/icons\";\r\nimport { FC } from \"react\";\r\nimport { classicNameResolver } from \"typescript\";\r\n\r\nexport const StyledBadge = withStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbadge: {\r\n\t\t\tright: -3,\r\n\t\t\ttop: 13,\r\n\t\t\tborder: `2px solid ${theme.palette.background.paper}`,\r\n\t\t\tpadding: \"0 4px\",\r\n\t\t\tbackgroundColor: \"gray\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t})\r\n)(Badge);\r\n\r\nexport const ConfirmedBadge = withStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbadge: {\r\n\t\t\tright: -3,\r\n\t\t\ttop: 13,\r\n\t\t\tborder: `2px solid ${theme.palette.background.paper}`,\r\n\t\t\tpadding: \"0 4px\",\r\n\t\t\tbackgroundColor: \"green\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t})\r\n)(Badge);\r\n\r\nexport const StyledViewPage: FC = (props) => {\r\n\tconst useViewPageStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\tflexGrow: 1,\r\n\t\t\t},\r\n\t\t\tpaper: {\r\n\t\t\t\tpadding: theme.spacing(2),\r\n\t\t\t\tcolor: theme.palette.text.secondary,\r\n\t\t\t\tminHeight: 400,\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useViewPageStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper className={classes.paper}>{props.children}</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface IStyledViewFieldProps {\r\n\theight?: number;\r\n\tmaxWidth?: number;\r\n}\r\n\r\nexport const StyledViewField: FC<IStyledViewFieldProps> = ({\r\n\theight,\r\n\tmaxWidth,\r\n\tchildren,\r\n}) => {\r\n\tconst useViewPageStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tpadding: \"0 2px\",\r\n\t\t\t\tborderBottom: \"2px dotted #e0e0e0\",\r\n\t\t\t\theight: height ?? \"initial\",\r\n\t\t\t\tmaxWidth: maxWidth ?? 300,\r\n\t\t\t\tminHeight: 20,\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useViewPageStyles();\r\n\r\n\treturn <div className={classes.root}>{children}</div>;\r\n};\r\n\r\ninterface IInlineListProps {\r\n\talign?: \"left\" | \"center\" | \"right\";\r\n\twrap?: boolean;\r\n\tclassName?: string;\r\n}\r\n\r\nexport const InlineList: FC<IInlineListProps> = ({\r\n\talign,\r\n\twrap,\r\n\tclassName,\r\n\tchildren,\r\n}) => {\r\n\tconst useStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\ttextAlign: align,\r\n\t\t\t\twhiteSpace: wrap ? \"initial\" : \"nowrap\",\r\n\t\t\t\t\"& > ul\": {\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpaddingInlineStart: 0,\r\n\t\t\t\t},\r\n\t\t\t\t\"& ul ul\": {\r\n\t\t\t\t\tpadding: \"20px\",\r\n\t\t\t\t},\r\n\t\t\t\t\"& li\": {\r\n\t\t\t\t\tlistStyle: \"none\",\r\n\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\tverticalAlign: \"top\",\r\n\t\t\t\t\tmargin:\r\n\t\t\t\t\t\talign == \"left\"\r\n\t\t\t\t\t\t\t? \"0 10px 0 0\"\r\n\t\t\t\t\t\t\t: align == \"center\"\r\n\t\t\t\t\t\t\t? \"0 5px 0 5px\"\r\n\t\t\t\t\t\t\t: \"0 0 0 10px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.root} ${className ?? \"\"}`}>\r\n\t\t\t<ul>{children}</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface IInlineListItemProps {\r\n\talign?: \"left\" | \"center\" | \"right\";\r\n\twidth?: number;\r\n}\r\nexport const InlineListItem: FC<IInlineListItemProps> = ({\r\n\talign,\r\n\twidth,\r\n\tchildren,\r\n}) => {\r\n\tconst useStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\ttextAlign: align ?? \"left\",\r\n\t\t\t\twidth: width ? `${width}px` : \"initial\",\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useStyles();\r\n\r\n\treturn <li className={classes.root}>{children}</li>;\r\n};\r\n\r\nexport const useClickableStyle = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t\"&, & *\": {\r\n\t\t\t\tcursor: \"pointer !important\",\r\n\t\t\t\tcolor: \"black !important\",\r\n\t\t\t},\r\n\t\t\t\"&:hover *\": {\r\n\t\t\t\tcolor: \"blue !important\",\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n);\r\n","import { GPCAccount, QuickProfile } from \"./models\";\r\n\r\nexport class Unit {\r\n\tid: number = 0;\r\n\tunit: string = \"\";\r\n}\r\n\r\nexport class Category {\r\n\tid: number = 0;\r\n\tcategory: string = \"\";\r\n}\r\n\r\nexport class Warehouse {\r\n\tid: number = 0;\r\n\twarehouse: string = \"\";\r\n\taccountNo: string = \"\";\r\n\taccount?: GPCAccount;\r\n}\r\n\r\nexport class Stock {\r\n\tid: number = 0;\r\n\tstockName: string = \"\";\r\n\tdescription: string = \"\";\r\n\tunitId: number = 0;\r\n\tcategoryId: number = 0;\r\n\tunit?: Unit;\r\n\tcategory?: Category;\r\n}\r\n\r\nexport class InventoryDoc {\r\n\tid: number = 0;\r\n\tdocDate: Date = new Date();\r\n\tdescription: string = \"\";\r\n\twarehouseId: number = 0;\r\n\tremarks: string = \"\";\r\n\tisConfirmed: boolean = false;\r\n\tdateConfirmed?: Date;\r\n\tconrirmedByProfileId?: number;\r\n\tconfirmedBy?: QuickProfile;\r\n\twarehouse?: Warehouse;\r\n\titemCount: number = 0;\r\n}\r\n\r\nexport class InventoryDocItem {\r\n\tid: number = 0;\r\n\tparentId: number = 0;\r\n}\r\n\r\nexport class Delivery extends InventoryDoc {\r\n\tpoNo: string = \"\";\r\n\tdrNo: string = \"\";\r\n\tamount: number = 0;\r\n\tsupplier: string = \"\";\r\n}\r\n\r\nexport class DeliveryItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice?: number = 0;\r\n\tstock?: Stock;\r\n}\r\n\r\nexport class PriceList extends InventoryDoc {}\r\n\r\nexport class PriceListItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n}\r\n\r\nexport class AccountOrder extends InventoryDoc {\r\n\torNo: string = \"\";\r\n\taccountNo: string = \"\";\r\n\taccount?: GPCAccount;\r\n\tamount: number = 0;\r\n}\r\n\r\nexport class AccountOrderItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n\tamount: number = 0;\r\n\ttotalPointValue: number = 0;\r\n\tdiscountRate: number = 0;\r\n\tdiscount: number = 0;\r\n}\r\n\r\nexport class WarehouseOrder extends InventoryDoc {\r\n\torNo: string = \"\";\r\n\ttoWarehouseId: number = 0;\r\n\ttoWarehouse?: Warehouse;\r\n\tamount: number = 0;\r\n}\r\n\r\nexport class WarehouseOrderItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n\tamount: number = 0;\r\n\ttotalPointValue: number = 0;\r\n\tdiscountRate: number = 0;\r\n\tdiscount: number = 0;\r\n}\r\n\r\nexport class Inventory {\r\n\tid: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../../style.scss\";\r\nimport { useNavigation } from \"../../../../lib/hooks\";\r\n\r\nconst LandingMenu: FC = () => {\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"delivery\")}>Delivery</Button>\r\n\t\t\t<Button onClick={() => go(\"pricelist\")}>Price List</Button>\r\n\t\t\t<Button onClick={() => go(\"account-order\")}>Account Order</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse-order\")}>Warehouse Order</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"inventory-report\")}>Inventory</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"units\")}>Units</Button>\r\n\t\t\t<Button onClick={() => go(\"categories\")}>Categories</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse\")}>Warehouse</Button>\r\n\t\t\t<Button onClick={() => go(\"stocks\")}>Stocks</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Inventory</h3>\r\n\r\n\t\t\t<p>Please select your task</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\nimport { Warehouse } from \"../../lib/models-inventory\";\r\n\r\ninterface IProps {\r\n\tvalue?: Warehouse;\r\n\tonChange?: (value: Warehouse | undefined) => void;\r\n\trefresh?: Date;\r\n\tinputLabel?: string;\r\n}\r\n\r\nexport const WarehouseSelect: FC<IProps> = ({\r\n\tvalue,\r\n\tonChange,\r\n\trefresh,\r\n\tinputLabel,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<Warehouse[] | null>(null);\r\n\tconst [val, setValue] = useState<Warehouse | null>(null);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse/list`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t\tsetValue(value ?? null);\r\n\t\tsetInputValue(value?.warehouse ?? \"\");\r\n\t}, [refresh, value]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tvalue={val}\r\n\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\tsetValue(newValue);\r\n\t\t\t\t\t\tonChange && onChange(newValue ?? undefined);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\tonInputChange={(event, newValue) => setInputValue(newValue ?? \"\")}\r\n\t\t\t\t\toptions={data}\r\n\t\t\t\t\tgetOptionLabel={(option) => option.warehouse}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} label={inputLabel} required />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nWarehouseSelect.defaultProps = {\r\n\tinputLabel: \"Select Warehouse\",\r\n};\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { FC, useState } from \"react\";\r\nimport { FDouble } from \"../lib/common\";\r\n\r\ninterface IAmountProps {\r\n\tvalue: number | null;\r\n\tonFinalChange: (value: number) => void;\r\n\ttfProps: TextFieldProps;\r\n\tzeroIsAllowed: boolean;\r\n}\r\n\r\nexport const AmountField: FC<IAmountProps> = (props) => {\r\n\tconst [v, setV] = useState(FDouble(Number(props.value ?? \"0\")));\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...props.tfProps}\r\n\t\t\tvalue={v}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tif (!isNaN(Number(e.target.value))) {\r\n\t\t\t\t\tconst n = parseFloat(e.target.value);\r\n\r\n\t\t\t\t\tconst valid = props.zeroIsAllowed ? n >= 0 : n > 0;\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\tsetV(e.target.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tonBlur={(e) => {\r\n\t\t\t\tlet s = e.target.value.replace(\",\", \"\");\r\n\t\t\t\tconst finalValue = parseFloat(s);\r\n\t\t\t\tsetV(FDouble(finalValue));\r\n\t\t\t\tprops.onFinalChange(finalValue);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { GPCAccount } from \"../../lib/models\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\n\r\ninterface IProps {\r\n\tvalue?: GPCAccount;\r\n\tonChange?: (value: GPCAccount | undefined) => void;\r\n\trefresh?: Date;\r\n\tinputLabel?: string;\r\n}\r\n\r\nexport const AccountSelect: FC<IProps> = ({\r\n\tvalue,\r\n\tonChange,\r\n\trefresh,\r\n\tinputLabel,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst getLabel = (v?: GPCAccount) => {\r\n\t\tconst ret = v\r\n\t\t\t? `${v.accountNo}: ${v.profile.name} (${v.profile.email})`\r\n\t\t\t: \"\";\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tconst [data, setData] = useState<GPCAccount[] | null>(null);\r\n\tconst [val, setValue] = useState<GPCAccount | null>(null);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(`${process.env.REACT_APP_API}/gpcaccount/list`);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t\tsetValue(value ?? null);\r\n\t\tsetInputValue(getLabel(value));\r\n\t}, [refresh, value]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tvalue={val}\r\n\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\tsetValue(newValue);\r\n\t\t\t\t\t\tonChange && onChange(newValue ?? undefined);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\tonInputChange={(event, newValue) => setInputValue(newValue ?? \"\")}\r\n\t\t\t\t\toptions={data}\r\n\t\t\t\t\tgetOptionLabel={(option) => getLabel(option)}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} label={inputLabel} required />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nAccountSelect.defaultProps = {\r\n\tinputLabel: \"Select Account\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/confirmed.9ef1307f.png\";","import { FC, forwardRef, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\nimport { Category, Inventory, Stock, Unit } from \"../../lib/models-inventory\";\r\nimport {\r\n\tDataGrid,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridRowId,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { NotificationContext } from \"../../lib/notifications\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport {\r\n\tAppBar,\r\n\tcreateStyles,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tTheme,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { FDateCustom, FDouble } from \"../../lib/common\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tappBar: {\r\n\t\t\tposition: \"relative\",\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tmarginLeft: theme.spacing(2),\r\n\t\t\tflex: 1,\r\n\t\t},\r\n\t})\r\n);\r\n\r\nconst Transition = forwardRef(function Transition(\r\n\tprops: TransitionProps & { children?: React.ReactElement },\r\n\tref: React.Ref<unknown>\r\n) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface IProps {\r\n\twarehouseId: number;\r\n\tdate: Date;\r\n\tselectedIds: number[];\r\n\tonChange: (value: Inventory[]) => void;\r\n}\r\n\r\nexport const InventorySelect: FC<IProps> = ({\r\n\twarehouseId,\r\n\tdate,\r\n\tselectedIds,\r\n\tonChange,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<Inventory[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${\r\n\t\t\t\tprocess.env.REACT_APP_API\r\n\t\t\t}/inventory/report?warehouseId=${warehouseId}&date=${FDateCustom(\r\n\t\t\t\tdate,\r\n\t\t\t\t\"MM-DD-YYYY\"\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, []);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.stockName,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.description,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tconst [selectionModel, setSelectionModel] = useState<GridRowId[]>([]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<DataGrid\r\n\t\t\t\t\trows={data.filter((x) => !selectedIds.find((y) => y == x.id))}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\tautoHeight\r\n\t\t\t\t\tcheckboxSelection\r\n\t\t\t\t\tselectionModel={selectionModel}\r\n\t\t\t\t\tonSelectionModelChange={(newSelection) => {\r\n\t\t\t\t\t\tsetSelectionModel(newSelection.selectionModel);\r\n\r\n\t\t\t\t\t\tconst selectedStocks = data.filter((x) =>\r\n\t\t\t\t\t\t\tnewSelection.selectionModel.find((y) => y == x.id)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tonChange(selectedStocks);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\ninterface IInventorySelectDialogProps {\r\n\twarehouseId: number;\r\n\tdate: Date;\r\n\tselectedIds: number[];\r\n\topen: boolean;\r\n\tsetOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n\tonSelectionConfirmed: (value: Inventory[]) => void;\r\n}\r\n\r\nexport const InventorySelectDialog: FC<IInventorySelectDialogProps> = ({\r\n\twarehouseId,\r\n\tdate,\r\n\tselectedIds,\r\n\topen,\r\n\tsetOpen,\r\n\tonSelectionConfirmed,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [selection, setSelection] = useState<Inventory[]>([]);\r\n\r\n\tconst handleClose = () => setOpen(false);\r\n\tconst handleApply = async () => {\r\n\t\tif (selection.length == 0) {\r\n\t\t\tawait nc.msgbox.show(\"No item selected\", \"Select Stocks\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonSelectionConfirmed(selection);\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tfullScreen\r\n\t\t\t\tTransitionComponent={Transition}\r\n\t\t\t>\r\n\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\tSelect Stocks\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Button onClick={handleClose} color=\"inherit\">\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button onClick={handleApply} color=\"inherit\">\r\n\t\t\t\t\t\t\tApply\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<InventorySelect\r\n\t\t\t\t\twarehouseId={warehouseId}\r\n\t\t\t\t\tdate={date}\r\n\t\t\t\t\tselectedIds={selectedIds}\r\n\t\t\t\t\tonChange={(value) => setSelection(value)}\r\n\t\t\t\t/>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { RequestType, useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { AccountOrder } from \"../../../../lib/models-inventory\";\r\nimport { FDate, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport {\r\n\tNotification,\r\n\tNotificationContext,\r\n} from \"../../../../lib/notifications\";\r\nimport { GPCAccount, QuickProfile } from \"../../../../lib/models\";\r\nimport { Global } from \"../../../../lib/global\";\r\nimport { ConfirmedBadge, StyledBadge } from \"../../../../components/styled\";\r\n\r\ninterface IProps {\r\n\trefresh: Date;\r\n\twarehouseId: number;\r\n}\r\n\r\nexport const deleteRecord = async (\r\n\tid: number,\r\n\tg: Global,\r\n\treq: RequestType,\r\n\tnc: Notification,\r\n\tcallback: () => void\r\n) => {\r\n\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\"Are you sure you want to delete this record?\"\r\n\t);\r\n\tif (confirmed) {\r\n\t\tconst res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order/delete?id=${id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully deleted\");\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst dummyButton = (\r\n\t<IconButton size=\"small\" disabled>\r\n\t\t<PageviewIcon style={{ visibility: \"hidden\" }} />\r\n\t</IconButton>\r\n);\r\n\r\nconst List: FC<IProps> = ({ refresh, warehouseId }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<AccountOrder[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order/list?warehouseId=${warehouseId}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst create = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"create\");\r\n\t};\r\n\r\n\tconst open = (openData: AccountOrder, mode: PageModeType) => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: openData });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(mode);\r\n\t};\r\n\r\n\tconst openItems = (openData: AccountOrder, mode: PageModeType) => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ refresh: new Date(), parent: openData });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(mode);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"docDate\",\r\n\t\t\theaderName: \"Date\",\r\n\t\t\twidth: 110,\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDate(new Date(params.value as Date)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"orNo\",\r\n\t\t\theaderName: \"OR No.\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"name\",\r\n\t\t\theaderName: \"Account Name\",\r\n\t\t\twidth: 200,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle={`Account #${\r\n\t\t\t\t\t\t(params.getValue(params.id, \"account\") as GPCAccount).accountNo\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(params.getValue(params.id, \"account\") as GPCAccount)?.profile\r\n\t\t\t\t\t\t\t\t?.name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\t(params.getValue(params.id, \"account\") as GPCAccount)?.profile?.name,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"amount\",\r\n\t\t\theaderName: \"Amount (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"confirmed\",\r\n\t\t\theaderName: \"Status\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\tlet tt = \"Unconfirmed\";\r\n\r\n\t\t\t\tconst isConfirmed = params.getValue(\r\n\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\"isConfirmed\"\r\n\t\t\t\t) as boolean;\r\n\t\t\t\tif (isConfirmed) {\r\n\t\t\t\t\tconst confirmedBy = params.getValue(\r\n\t\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\t\"confirmedBy\"\r\n\t\t\t\t\t) as QuickProfile;\r\n\r\n\t\t\t\t\ttt = `Confirmed by ${confirmedBy.name}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isConfirmed ? (\r\n\t\t\t\t\t\t\t<Box color=\"green\">\r\n\t\t\t\t\t\t\t\t<Tooltip title={tt}>\r\n\t\t\t\t\t\t\t\t\t<ConfirmedBadge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={params.getValue(params.id, \"itemCount\")}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t\t\t\t\t\t</ConfirmedBadge>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Box color=\"lightgray\">\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Draft\">\r\n\t\t\t\t\t\t\t\t\t<DraftsIcon />\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"\",\r\n\t\t\tfilterable: false,\r\n\t\t\tsortable: false,\r\n\t\t\tdisableColumnMenu: true,\r\n\t\t\tflex: 0.3,\r\n\t\t\tcellClassName: \"row-commands\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\tconst confirmed = (params.row as AccountOrder).isConfirmed;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{confirmed ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as AccountOrder, \"view\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<PageviewIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Update Items\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\topenItems(params.row as AccountOrder, \"view-items\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\t\tbadgeContent={params.getValue(params.id, \"itemCount\")}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MoreHorizIcon />\r\n\t\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as AccountOrder, \"view\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<PageviewIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Edit\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as AccountOrder, \"edit\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteRecord(params.id as number, g, req, nc, getList)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Account Orders</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PageCommands>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={create}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</PageCommands>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import { FC, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AccountOrder } from \"../../../../lib/models-inventory\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PageStateContext from \"../../../../lib/pageStateContext\";\r\nimport { Box, FormControl, FormLabel } from \"@material-ui/core\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { FDateCustom } from \"../../../../lib/common\";\r\nimport { AmountField } from \"../../../../components/amount-field\";\r\nimport { GPCAccount } from \"../../../../lib/models\";\r\nimport { AccountSelect } from \"../../../../components/data-select/account-select\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t\"& > *\": {\r\n\t\t\t\tmargin: theme.spacing(1),\r\n\t\t\t\twidth: \"25ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t\taccountNo: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\twidth: 400,\r\n\t\t},\r\n\t})\r\n);\r\n\r\ninterface IProps {\r\n\tonSubmit: (data: AccountOrder) => void;\r\n\tdata: AccountOrder;\r\n}\r\n\r\nconst Form: FC<IProps> = ({ data, onSubmit }) => {\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst classes = useStyles();\r\n\tconst formRef = useRef<HTMLFormElement>(null);\r\n\r\n\tconst [docDate, setDocDate] = useState(data.docDate);\r\n\tconst [orNo, setORNo] = useState(data.orNo);\r\n\tconst [description, setDescription] = useState(data.description);\r\n\tconst [account, setAccount] = useState<GPCAccount | undefined>(data.account);\r\n\tconst [amount, setAmount] = useState(data.amount);\r\n\tconst [remarks, setRemarks] = useState(data.remarks);\r\n\r\n\tconst [execSubmit, setExecSubmit] = useState<Date | null>(null);\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({\r\n\t\tkey: \"create-accountOrder-form-setExecSubmit\",\r\n\t\tdispatch: setExecSubmit,\r\n\t});\r\n\r\n\tconst getData = () => {\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tdocDate: docDate,\r\n\t\t\torNo: orNo,\r\n\t\t\tdescription: description,\r\n\t\t\taccountNo: account?.accountNo ?? \"\",\r\n\t\t\taccount: account,\r\n\t\t\tamount: amount,\r\n\t\t\tremarks: remarks,\r\n\t\t};\r\n\t};\r\n\r\n\tconst getErrors = () => {\r\n\t\tconst ret: string[] = [];\r\n\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tconst handleSubmit = (e?: React.SyntheticEvent) => {\r\n\t\te?.preventDefault();\r\n\r\n\t\tconst isValid = formRef.current?.reportValidity();\r\n\t\tif (isValid) {\r\n\t\t\tconst errors = getErrors();\r\n\t\t\tif (errors.length > 0) {\r\n\t\t\t\tnc.snackbar.show(errors, \"error\");\r\n\t\t\t} else {\r\n\t\t\t\tconst newData = getData();\r\n\t\t\t\tonSubmit(newData);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (execSubmit) handleSubmit();\r\n\t}, [execSubmit]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form\r\n\t\t\t\tref={formRef}\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<FormLabel>Record Id</FormLabel>\r\n\t\t\t\t\t<b>{data.id == 0 ? \"[New Record]\" : data.id}</b>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Date\"\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={FDateCustom(docDate, \"YYYY-MM-DD\")}\r\n\t\t\t\t\tonChange={(e) => setDocDate(new Date(e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"OR No.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={orNo}\r\n\t\t\t\t\tonChange={(e) => setORNo(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box className={classes.accountNo}>\r\n\t\t\t\t\t<AccountSelect\r\n\t\t\t\t\t\tvalue={account}\r\n\t\t\t\t\t\tonChange={(value) => setAccount(value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Remarks\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvalue={remarks}\r\n\t\t\t\t\tonChange={(e) => setRemarks(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { AccountOrder, Warehouse } from \"../../../../lib/models-inventory\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport Form from \"./form\";\r\n\r\ninterface IProps {\r\n\tparent: Warehouse;\r\n}\r\n\r\nconst Create: FC<IProps> = ({ parent }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst handleSubmit = async (data: AccountOrder) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order/save`,\r\n\t\t\tdata\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToList = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"list\");\r\n\t};\r\n\r\n\tconst backToView = (data: AccountOrder) => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"create-accountOrder-form-setExecSubmit\")\r\n\t\t\t\t?.dispatch as React.Dispatch<React.SetStateAction<Date | null>>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\tconst newData = new AccountOrder();\r\n\tnewData.warehouseId = parent.id;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Create Account Order</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={newData} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button variant=\"contained\" color=\"default\" onClick={backToList}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Create;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { AccountOrder } from \"../../../../lib/models-inventory\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport Form from \"./form\";\r\n\r\ninterface IProps {\r\n\tdata?: AccountOrder;\r\n}\r\n\r\nconst Edit: FC<IProps> = ({ data }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst handleSubmit = async (data: AccountOrder) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order/save`,\r\n\t\t\tdata\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToView = (data?: AccountOrder) => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"create-accountOrder-form-setExecSubmit\")\r\n\t\t\t\t?.dispatch as React.Dispatch<React.SetStateAction<Date | null>>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Update Account Order</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={data} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\tonClick={() => backToView(data)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Edit;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { AccountOrderItem, Stock } from \"../../../../lib/models-inventory\";\r\nimport { FCurrency, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext from \"../../../../lib/pageStateContext\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { InlineList } from \"../../../../components/styled\";\r\n\r\nexport interface IItemProps {\r\n\trefresh: Date;\r\n\tparentId: number;\r\n}\r\n\r\nconst ItemsView: FC<IItemProps> = ({ refresh, parentId }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<AccountOrderItem[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order-items?parentId=${parentId}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"stockId\", headerName: \"Stock Id\", width: 150 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip title={params.row.stock?.description}>\r\n\t\t\t\t\t<div>{params.row.stock?.stockName}</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\t(params.getValue(params.id, \"stock\") as Stock)?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\t(params.getValue(params.id, \"stock\") as Stock)?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\ttype: \"number\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"discount\",\r\n\t\t\theaderName: \"Discount (₱)\",\r\n\t\t\twidth: 160,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"totalPointValue\",\r\n\t\t\theaderName: \"Point Value\",\r\n\t\t\twidth: 200,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"amount\",\r\n\t\t\theaderName: \"Amount (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tlet totalAmount = 0;\r\n\tlet totalPointValue = 0;\r\n\tdata?.forEach((x) => {\r\n\t\ttotalPointValue += x.totalPointValue;\r\n\t\ttotalAmount += x.amount;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Account Order Items</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<div style={{ height: 400, width: \"100%\" }}>\r\n\t\t\t\t\t\t<InlineList align=\"right\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h3>{`Total Point Value: ${FCurrency(totalPointValue)}`}</h3>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h3>&nbsp;|&nbsp;</h3>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h3>{`Total Amount: ${FCurrency(totalAmount)}`}</h3>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</InlineList>\r\n\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ItemsView;\r\n","import { Box, Button, Divider, Grid, TextField } from \"@material-ui/core\";\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport {\r\n\tAccountOrder,\r\n\tAccountOrderItem,\r\n\tInventory,\r\n} from \"../../../../lib/models-inventory\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n\tFCurrency,\r\n\tFDate,\r\n\tFDateCustom,\r\n\tFDateTime,\r\n} from \"../../../../lib/common\";\r\nimport ItemsView from \"./items-view\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { deleteRecord } from \"./list\";\r\nimport ConfirmedImage from \"../../../../assets/confirmed.png\";\r\nimport { StyledViewField, StyledViewPage } from \"../../../../components/styled\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tconfirmed: {\r\n\t\t\twidth: 300,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 50,\r\n\t\t\tright: 50,\r\n\t\t\topaity: 0.1,\r\n\t\t},\r\n\t})\r\n);\r\n\r\ninterface IProps {\r\n\tdata?: AccountOrder;\r\n}\r\n\r\nconst View: FC<IProps> = ({ data }) => {\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst classes = useStyles();\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\t//#region FOR RE-CHECKING BEFORE CONFIRM\r\n\tconst [items, setItems] = useState<AccountOrderItem[] | null>(null);\r\n\r\n\tconst getInventory = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/report?warehouseId=${\r\n\t\t\t\tdata?.warehouseId\r\n\t\t\t}&date=${FDateCustom(data?.docDate, \"MM-DD-YYYY\")}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\treturn res.data as Inventory[];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order-items?parentId=${data?.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetItems(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tlet errors: string[] = [];\r\n\r\n\t\tconst inv = await getInventory();\r\n\t\tif (inv == null) {\r\n\t\t\terrors.push(\"Unable to acquire inventory list\");\r\n\t\t} else {\r\n\t\t\titems?.forEach((x) => {\r\n\t\t\t\tif (x.stock == null) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId} does not exist anymore. It was probably deleted. Please remove the item.`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (x.qty <= 0) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is invalid. Please specify a value greater than 0`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst _inv = inv.find((y) => y.id == x.stockId);\r\n\t\t\t\t\tconst q = _inv?.qty ?? 0;\r\n\t\t\t\t\tif (x.qty > q) {\r\n\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is greater than available supply (${q})`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, []);\r\n\t//#endregion\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst backToList = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"list\");\r\n\t};\r\n\r\n\tconst edit = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"edit\");\r\n\t};\r\n\r\n\tconst updateItems = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ refresh: new Date(), parent: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view-items\");\r\n\t};\r\n\r\n\tconst create = () => {\r\n\t\tconst d = new AccountOrder();\r\n\t\td.warehouseId = data.warehouseId;\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: d });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"create\");\r\n\t};\r\n\r\n\tconst confirm = async () => {\r\n\t\tconst errors = await validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tnc.msgbox.show(errors, \"Save items\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\t\"Are you sure you want to confirm this document?\"\r\n\t\t);\r\n\t\tif (!confirmed) return;\r\n\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order/confirm?id=${data.id}&profileId=${g.Profile.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Document was successfully confirmed\");\r\n\t\t\tbackToList();\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>View Account Order</h4>\r\n\t\t\t<StyledViewPage>\r\n\t\t\t\t{data.isConfirmed && (\r\n\t\t\t\t\t<img src={ConfirmedImage} className={classes.confirmed} />\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tId:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.id}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tDate:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{FDate(data.docDate)}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tOR No.:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.orNo}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tDescription:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.description}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tAmount:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{FCurrency(data.amount)}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tRemarks:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.remarks}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{data.isConfirmed && (\r\n\t\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\t\tConfirmed by:\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t\t<StyledViewField>{data.confirmedBy?.name}</StyledViewField>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<small>{FDateTime(data.dateConfirmed)}</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tAccount Name:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.account?.profile?.name}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tAccount No.:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>{data.accountNo}</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\t\tRank:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t\t<StyledViewField>\r\n\t\t\t\t\t\t\t\t\t{data.account?.rank?.description}\r\n\t\t\t\t\t\t\t\t</StyledViewField>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<br />\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{data && <ItemsView refresh={new Date()} parentId={data.id} />}\r\n\t\t\t</StyledViewPage>\r\n\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button variant=\"contained\" color=\"default\" onClick={backToList}>\r\n\t\t\t\t\tBack to list\r\n\t\t\t\t</Button>\r\n\t\t\t\t{data.itemCount > 0 && !data.isConfirmed && (\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!data.isConfirmed && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={updateItems}>\r\n\t\t\t\t\t\t\tUpdate Items\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={edit}>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={create}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() => deleteRecord(data.id, g, req, nc, backToList)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { Box, Button, TextField, Tooltip } from \"@material-ui/core\";\r\nimport {\r\n\tAccountOrder,\r\n\tAccountOrderItem,\r\n\tInventory,\r\n\tStock,\r\n} from \"../../../../lib/models-inventory\";\r\nimport { FDate, FDateCustom, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridRowId,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { AmountField } from \"../../../../components/amount-field\";\r\nimport { InventorySelectDialog } from \"../../../../components/data-select/inventory-select\";\r\n\r\nexport interface IItemProps {\r\n\trefresh: Date;\r\n\tparent: AccountOrder;\r\n}\r\n\r\nconst Items: FC<IItemProps> = ({ refresh, parent }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<AccountOrderItem[] | null>(null);\r\n\tconst [dataBak, setDataBak] = useState<AccountOrderItem[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order-items?parentId=${parent?.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t\tsetDataBak(JSON.parse(JSON.stringify(res.data)));\r\n\t\t}\r\n\t};\r\n\r\n\tconst getInventory = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/report?warehouseId=${\r\n\t\t\t\tparent.warehouseId\r\n\t\t\t}&date=${FDateCustom(parent.docDate, \"MM-DD-YYYY\")}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\treturn res.data as Inventory[];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tlet errors: string[] = [];\r\n\r\n\t\tconst inv = await getInventory();\r\n\t\tif (inv == null) {\r\n\t\t\terrors.push(\"Unable to acquire inventory list\");\r\n\t\t} else {\r\n\t\t\tdata?.forEach((x) => {\r\n\t\t\t\tif (x.stock == null) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId} does not exist anymore. It was probably deleted. Please remove the item.`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (x.qty <= 0) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is invalid. Please specify a value greater than 0`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst _inv = inv.find((y) => y.id == x.stockId);\r\n\t\t\t\t\tconst q = _inv?.qty ?? 0;\r\n\t\t\t\t\tif (x.qty > q) {\r\n\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is greater than available supply (${q})`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tconst saveList = async () => {\r\n\t\tconst errors = await validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tnc.msgbox.show(errors, \"Save items\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/order-items/save?parentId=${parent?.id}`,\r\n\t\t\tdata\r\n\t\t);\r\n\r\n\t\tif (res.success) {\r\n\t\t\tparent = res.data;\r\n\r\n\t\t\tnc.snackbar.show(\"Items were successfully saved\");\r\n\t\t\tbackToView();\r\n\t\t}\r\n\t};\r\n\r\n\tconst isPrestine = () => JSON.stringify(data) == JSON.stringify(dataBak);\r\n\r\n\tconst backToView = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: parent });\r\n\t\t(\r\n\t\t\tps.Get(\"accountOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst removeSelectedItems = () => {\r\n\t\tconst newData =\r\n\t\t\tdata?.filter((x) => selectionModel.find((y) => y == x.id) == null) ??\r\n\t\t\tnull;\r\n\r\n\t\tsetData(newData);\r\n\t\tsetSelectionModel([]);\r\n\t};\r\n\r\n\tconst handleAddItems = (value: Inventory[]) => {\r\n\t\t//max data id\r\n\t\tlet maxId = 0;\r\n\t\tconst lst = data\r\n\t\t\t?.map((x) => x.id)\r\n\t\t\t.sort()\r\n\t\t\t.reverse();\r\n\t\tif (lst && lst.length > 0) maxId = lst[0];\r\n\r\n\t\tconst newItems: AccountOrderItem[] = value.map((x, i) => {\r\n\t\t\tconst qty = 1;\r\n\t\t\treturn {\r\n\t\t\t\tid: maxId + i + 1,\r\n\t\t\t\tparentId: parent?.id,\r\n\t\t\t\tstockId: x.id,\r\n\t\t\t\tstock: x.stock,\r\n\t\t\t\tqty: qty,\r\n\t\t\t\tprice: x.price,\r\n\t\t\t\tpointValue: x.pointValue,\r\n\t\t\t\tamount: x.price,\r\n\t\t\t\ttotalPointValue: x.pointValue * qty,\r\n\t\t\t\tdiscountRate: 0,\r\n\t\t\t\tdiscount: 0,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst _data = [...(data ?? []), ...newItems];\r\n\t\tsetData(_data);\r\n\t};\r\n\r\n\tconst [openInventorySelection, setOpenInventorySelection] = useState(false);\r\n\r\n\tconst [selectionModel, setSelectionModel] = useState<GridRowId[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tparent && getList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{ field: \"stockId\", headerName: \"Stock Id\", width: 150 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip title={params.row.stock?.description}>\r\n\t\t\t\t\t<div>{params.row.stock?.stockName}</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\ttype: \"number\",\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<RenderCell\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\tsetData={setData}\r\n\t\t\t\t\tparams={params}\r\n\t\t\t\t\tfieldName=\"qty\"\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tif (!parent) return <>[No parent data]</>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box textAlign=\"center\">\r\n\t\t\t\t<b>{parent?.description}</b>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p>{`For ${parent?.account?.profile?.name}`}</p>\r\n\t\t\t\t<small>{`Account # ${parent?.accountNo} | Date: ${FDate(\r\n\t\t\t\t\tparent?.docDate\r\n\t\t\t\t)}`}</small>\r\n\t\t\t</Box>\r\n\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Account Order Items</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<div style={{ height: 400, width: \"100%\" }}>\r\n\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t\tcheckboxSelection\r\n\t\t\t\t\t\t\tdisableSelectionOnClick\r\n\t\t\t\t\t\t\tselectionModel={selectionModel}\r\n\t\t\t\t\t\t\tonSelectionModelChange={(newSelection) =>\r\n\t\t\t\t\t\t\t\tsetSelectionModel(newSelection.selectionModel)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InventorySelectDialog\r\n\t\t\t\t\t\twarehouseId={parent.warehouseId}\r\n\t\t\t\t\t\tdate={parent.docDate}\r\n\t\t\t\t\t\tselectedIds={data.map((x) => x.stockId)}\r\n\t\t\t\t\t\topen={openInventorySelection}\r\n\t\t\t\t\t\tsetOpen={setOpenInventorySelection}\r\n\t\t\t\t\t\tonSelectionConfirmed={handleAddItems}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PageCommands>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\tif (!isPrestine()) {\r\n\t\t\t\t\t\t\t\t\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\t\t\t\t\t\t\t\t\"Some changes were not yet saved. Would you like to save these changes?\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tif (confirmed) {\r\n\t\t\t\t\t\t\t\t\t\tsaveList();\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbackToView();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => setOpenInventorySelection(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd Items\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={saveList}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{selectionModel.length > 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={removeSelectedItems}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tRemove Selected Items\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</PageCommands>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n\r\ninterface IProps {\r\n\tdata: AccountOrderItem[] | null;\r\n\tsetData: React.Dispatch<React.SetStateAction<AccountOrderItem[] | null>>;\r\n\tparams: GridCellParams;\r\n\tfieldName: \"qty\" | \"price\";\r\n}\r\n\r\nconst RenderCell: FC<IProps> = ({ data, setData, params, fieldName }) => {\r\n\tif (data == null) return <>[No data]</>;\r\n\r\n\tif (fieldName === \"qty\")\r\n\t\treturn (\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={data.find((x) => x.id == params.id)?.qty}\r\n\t\t\t\trequired\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tlet ds = [...data];\r\n\t\t\t\t\tlet d = ds.find((x) => x.id == params.id);\r\n\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\tif (!isNaN(Number(e.target.value))) {\r\n\t\t\t\t\t\t\tconst n = parseInt(e.target.value);\r\n\t\t\t\t\t\t\tif (n > 0) d.qty = n;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetData && setData([...ds]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\telse\r\n\t\treturn (\r\n\t\t\t<AmountField\r\n\t\t\t\tvalue={data.find((x) => x.id == params.id)?.price ?? null}\r\n\t\t\t\tzeroIsAllowed={true}\r\n\t\t\t\tonFinalChange={(value) => {\r\n\t\t\t\t\tlet ds = [...data];\r\n\t\t\t\t\tlet d = ds.find((x) => x.id == params.id);\r\n\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\td.price = value;\r\n\t\t\t\t\t\tsetData([...ds]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\ttfProps={{\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tvariant: \"outlined\",\r\n\t\t\t\t\tinputProps: { style: { textAlign: \"right\" } },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n};\r\n","import { FC, useContext, useState } from \"react\";\r\nimport BasePage from \"../../../base-page\";\r\nimport PageHeader from \"../../../base-page/page-header\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport List from \"./list\";\r\nimport Create from \"./create\";\r\nimport Edit from \"./edit\";\r\nimport View from \"./view\";\r\nimport Landing from \"../landing-page\";\r\nimport { WarehouseSelect } from \"../../../../components/data-select/warehouse-select\";\r\nimport { Warehouse } from \"../../../../lib/models-inventory\";\r\nimport Items, { IItemProps } from \"./items\";\r\n\r\nconst AccountOrder: FC = () => {\r\n\tconst [pageMode, setPageMode] = useState<PageModeType>(\"list\");\r\n\tconst [openProps, setOpenProps] = useState<object>({});\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({ key: \"accountOrders-setPageMode\", dispatch: setPageMode });\r\n\tps.Add({ key: \"accountOrders-setOpenProps\", dispatch: setOpenProps });\r\n\r\n\tconst warehouseCookie = sessionStorage.getItem(\"warehouse-selection\");\r\n\tconst [warehouse, setWarehouse] = useState<Warehouse | null>(\r\n\t\twarehouseCookie ? JSON.parse(warehouseCookie) : null\r\n\t);\r\n\r\n\tconst handleWarehouseSelect = (value: Warehouse | undefined) => {\r\n\t\tif (value) {\r\n\t\t\tsetWarehouse(value);\r\n\t\t\tsessionStorage.setItem(\"warehouse-selection\", JSON.stringify(value));\r\n\t\t} else {\r\n\t\t\tsetWarehouse(null);\r\n\t\t\tsessionStorage.removeItem(\"warehouse-selection\");\r\n\t\t}\r\n\t\tsetPageMode(\"list\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\r\n\t\t\t<WarehouseSelect\r\n\t\t\t\tvalue={warehouse ?? undefined}\r\n\t\t\t\tonChange={handleWarehouseSelect}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t{warehouse ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{pageMode == \"list\" && (\r\n\t\t\t\t\t\t<List refresh={new Date()} warehouseId={warehouse.id} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{pageMode == \"create\" && <Create parent={warehouse} />}\r\n\t\t\t\t\t{pageMode == \"edit\" && <Edit {...openProps} />}\r\n\t\t\t\t\t{pageMode == \"view\" && <View {...openProps} />}\r\n\t\t\t\t\t{pageMode == \"view-items\" && <Items {...(openProps as IItemProps)} />}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>[Please select a warehouse to work on]</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AccountOrder;\r\n"],"sourceRoot":""}