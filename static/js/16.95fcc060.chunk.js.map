{"version":3,"sources":["components/page-commands.tsx","components/styled.tsx","lib/models-inventory.tsx","pages/management/inventory/landing-page/index.tsx","components/data-select/warehouse-select.tsx","components/amount-field.tsx","assets/confirmed.png","components/data-select/inventory-select.tsx","pages/management/inventory/warehouse-order/list.tsx","pages/management/inventory/warehouse-order/form.tsx","pages/management/inventory/warehouse-order/create.tsx","pages/management/inventory/warehouse-order/edit.tsx","pages/management/inventory/warehouse-order/items-view.tsx","pages/management/inventory/warehouse-order/view.tsx","pages/management/inventory/warehouse-order/items.tsx","pages/management/inventory/warehouse-order/index.tsx"],"names":["PageCommands","props","className","children","StyledBadge","withStyles","theme","createStyles","badge","right","top","border","palette","background","paper","padding","backgroundColor","color","Badge","ConfirmedBadge","StyledViewPage","classes","makeStyles","root","flexGrow","spacing","text","secondary","minHeight","position","useViewPageStyles","StyledViewField","height","maxWidth","fontSize","borderBottom","InlineList","align","wrap","textAlign","whiteSpace","margin","paddingInlineStart","listStyle","display","verticalAlign","useStyles","InlineListItem","width","useClickableStyle","cursor","Unit","id","unit","Category","category","Warehouse","warehouse","accountNo","account","Stock","stockName","description","unitId","categoryId","InventoryDoc","docDate","Date","warehouseId","remarks","isConfirmed","dateConfirmed","conrirmedByProfileId","confirmedBy","itemCount","Delivery","poNo","drNo","amount","supplier","PriceList","AccountOrder","orNo","WarehouseOrder","toWarehouseId","toWarehouse","LandingMenu","go","useNavigation","onClick","Landing","WarehouseSelect","value","onChange","refresh","inputLabel","req","useRequest","useState","data","setData","val","setValue","inputValue","setInputValue","getList","a","get","process","res","success","useEffect","event","newValue","undefined","onInputChange","options","getOptionLabel","option","renderInput","params","label","required","defaultProps","AmountField","FDouble","Number","v","setV","tfProps","e","isNaN","target","n","parseFloat","zeroIsAllowed","onBlur","s","replace","finalValue","onFinalChange","appBar","title","marginLeft","flex","Transition","forwardRef","ref","direction","InventorySelect","date","selectedIds","FDateCustom","columns","field","headerName","valueGetter","row","stock","headerAlign","valueFormatter","selectionModel","setSelectionModel","rows","filter","x","find","y","hideFooterPagination","autoHeight","checkboxSelection","onSelectionModelChange","newSelection","selectedStocks","InventorySelectDialog","open","setOpen","onSelectionConfirmed","nc","useContext","NotificationContext","selection","setSelection","handleClose","handleApply","length","msgbox","show","onClose","fullScreen","TransitionComponent","edge","variant","deleteRecord","g","callback","confirmbox","post","snackbar","dummyButton","IconButton","size","disabled","style","visibility","List","ps","PageStateContext","useGlobal","openData","mode","Get","dispatch","FDate","renderCell","Tooltip","getValue","tt","name","Box","badgeContent","filterable","sortable","disableColumnMenu","cellClassName","confirmed","parent","openItems","FDateTime","Button","Form","onSubmit","formRef","useRef","setDocDate","setORNo","setDescription","setToWarehouse","setRemarks","execSubmit","setExecSubmit","Add","key","handleSubmit","preventDefault","current","reportValidity","errors","ret","push","getErrors","newData","getData","autoComplete","FormControl","FormLabel","TextField","type","multiline","Create","processing","backToView","hide","Edit","ItemsView","parentId","totalAmount","forEach","totalPointValue","FCurrency","opaity","View","items","setItems","getInventory","validate","inv","stockId","qty","_inv","q","backToList","confirm","Profile","src","ConfirmedImage","Grid","container","item","sm","fontWeight","Divider","d","Items","dataBak","setDataBak","JSON","parse","stringify","saveList","openInventorySelection","setOpenInventorySelection","fieldName","disableSelectionOnClick","map","maxId","lst","sort","reverse","newItems","i","price","pointValue","discountRate","discount","_data","RenderCell","inputProps","ds","parseInt","pageMode","setPageMode","openProps","setOpenProps","warehouseCookie","sessionStorage","getItem","setWarehouse","setItem","removeItem"],"mappings":"2GAMeA,IAJU,SAACC,GACzB,OAAO,qBAAKC,UAAU,gBAAf,SAAgCD,EAAME,a,iCCH9C,mSAYaC,EAAcC,aAAW,SAACC,GAAD,OACrCC,YAAa,CACZC,MAAO,CACNC,OAAQ,EACRC,IAAK,GACLC,OAAO,aAAD,OAAeL,EAAMM,QAAQC,WAAWC,OAC9CC,QAAS,QACTC,gBAAiB,OACjBC,MAAO,aARiBZ,CAWzBa,KAEWC,EAAiBd,aAAW,SAACC,GAAD,OACxCC,YAAa,CACZC,MAAO,CACNC,OAAQ,EACRC,IAAK,GACLC,OAAO,aAAD,OAAeL,EAAMM,QAAQC,WAAWC,OAC9CC,QAAS,QACTC,gBAAiB,QACjBC,MAAO,aARoBZ,CAW5Ba,KAEWE,EAAqB,SAACnB,GAClC,IAaMoB,EAboBC,aAAW,SAAChB,GAAD,OACpCC,YAAa,CACZgB,KAAM,CACLC,SAAU,GAEXV,MAAO,CACNC,QAAST,EAAMmB,QAAQ,GACvBR,MAAOX,EAAMM,QAAQc,KAAKC,UAC1BC,UAAW,IACXC,SAAU,gBAIGC,GAEhB,OACC,qBAAK5B,UAAWmB,EAAQE,KAAxB,SACC,cAAC,IAAD,CAAOrB,UAAWmB,EAAQP,MAA1B,SAAkCb,EAAME,cAU9B4B,EAA6C,SAAC,GAIpD,IAHNC,EAGK,EAHLA,OACAC,EAEK,EAFLA,SACA9B,EACK,EADLA,SAcMkB,EAZoBC,aAAW,SAAChB,GAAD,OACpCC,YAAa,CACZgB,KAAM,CACLW,SAAU,GACVnB,QAAS,QACToB,aAAc,qBACdH,OAAM,OAAEA,QAAF,IAAEA,IAAU,UAClBC,SAAQ,OAAEA,QAAF,IAAEA,IAAY,IACtBL,UAAW,QAIEE,GAEhB,OAAO,qBAAK5B,UAAWmB,EAAQE,KAAxB,SAA+BpB,KAS1BiC,EAAmC,SAAC,GAK1C,IAJNC,EAIK,EAJLA,MACAC,EAGK,EAHLA,KACApC,EAEK,EAFLA,UACAC,EACK,EADLA,SA4BMkB,EA1BYC,aAAW,SAAChB,GAAD,OAC5BC,YAAa,CACZgB,KAAM,CACLgB,UAAWF,EACXG,WAAYF,EAAO,UAAY,SAC/B,SAAU,CACTG,OAAQ,EACRC,mBAAoB,GAErB,UAAW,CACV3B,QAAS,QAEV,OAAQ,CACP4B,UAAW,OACXC,QAAS,eACTC,cAAe,MACfJ,OACU,QAATJ,EACG,aACS,UAATA,EACA,cACA,mBAKQS,GAEhB,OACC,qBAAK5C,UAAS,UAAKmB,EAAQE,KAAb,mBAAqBrB,QAArB,IAAqBA,IAAa,IAAhD,SACC,6BAAKC,OASK4C,EAA2C,SAAC,GAIlD,IAHNV,EAGK,EAHLA,MACAW,EAEK,EAFLA,MACA7C,EACK,EADLA,SAUMkB,EARYC,aAAW,SAAChB,GAAD,OAC5BC,YAAa,CACZgB,KAAM,CACLgB,UAAS,OAAEF,QAAF,IAAEA,IAAS,OACpBW,MAAOA,EAAK,UAAMA,EAAN,MAAkB,eAIjBF,GAEhB,OAAO,oBAAI5C,UAAWmB,EAAQE,KAAvB,SAA8BpB,KAGzB8C,EAAoB3B,aAAW,SAAChB,GAAD,OAC3CC,YAAa,CACZgB,KAAM,CACL,SAAU,CACT2B,OAAQ,qBACRjC,MAAO,oBAER,YAAa,CACZA,MAAO,0B,4UCnKEkC,EAAb,sCACCC,GAAa,EADd,KAECC,KAAe,IAGHC,EAAb,sCACCF,GAAa,EADd,KAECG,SAAmB,IAGPC,EAAb,sCACCJ,GAAa,EADd,KAECK,UAAoB,GAFrB,KAGCC,UAAoB,GAHrB,KAICC,aAJD,GAOaC,EAAb,sCACCR,GAAa,EADd,KAECS,UAAoB,GAFrB,KAGCC,YAAsB,GAHvB,KAICC,OAAiB,EAJlB,KAKCC,WAAqB,EALtB,KAMCX,UAND,OAOCE,cAPD,GAUaU,EAAb,sCACCb,GAAa,EADd,KAECc,QAAgB,IAAIC,KAFrB,KAGCL,YAAsB,GAHvB,KAICM,YAAsB,EAJvB,KAKCC,QAAkB,GALnB,KAMCC,aAAuB,EANxB,KAOCC,mBAPD,OAQCC,0BARD,OASCC,iBATD,OAUChB,eAVD,OAWCiB,UAAoB,GAQRC,EAAb,4MACCC,KAAe,GADhB,EAECC,KAAe,GAFhB,EAGCC,OAAiB,EAHlB,EAICC,SAAmB,GAJpB,YAA8Bd,GAcjBe,EAAb,4HAA+Bf,GASlBgB,EAAb,4MACCC,KAAe,GADhB,EAECxB,UAAoB,GAFrB,EAGCC,aAHD,IAICmB,OAAiB,EAJlB,YAAkCb,GAmBrBkB,EAAb,4MACCD,KAAe,GADhB,EAECE,cAAwB,EAFzB,EAGCC,iBAHD,IAICP,OAAiB,EAJlB,YAAoCb,I,iCC1FpC,2CAKMqB,EAAkB,WACvB,IAAQC,EAAOC,cAAPD,GAER,OACC,sBAAKrF,UAAU,oBAAf,UACC,cAAC,IAAD,CAAQuF,QAAS,kBAAMF,EAAG,aAA1B,sBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,cAA1B,wBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,kBAA1B,2BACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,oBAA1B,6BAJD,YAMC,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,qBAA1B,uBAND,YAQC,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,UAA1B,mBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,eAA1B,wBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,cAA1B,uBACA,cAAC,IAAD,CAAQE,QAAS,kBAAMF,EAAG,WAA1B,wBAkBYG,UAbK,WACnB,OACC,qCACC,2CAEA,wDACA,cAACJ,EAAD,IACA,uBACA,4B,gKCnBUK,EAA8B,SAAC,GAKrC,IAJNC,EAIK,EAJLA,MACAC,EAGK,EAHLA,SACAC,EAEK,EAFLA,QACAC,EACK,EADLA,WAEMC,EAAMC,cAEZ,EAAwBC,mBAA6B,MAArD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAA2B,MAAnD,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UACdC,6BADc,8BADH,QACTC,EADS,QAIPC,SACPV,EAAQS,EAAIV,MALE,2CAAH,qDAeb,OANAY,qBAAU,WAAO,IAAD,EACfN,IACAH,EAAQ,OAACV,QAAD,IAACA,IAAS,MAClBY,EAAa,iBAACZ,QAAD,IAACA,OAAD,EAACA,EAAOnC,iBAAR,QAAqB,MAChC,CAACqC,EAASF,IAGZ,mCACEO,EACA,cAAC,IAAD,CACCP,MAAOS,EACPR,SAAU,SAACmB,EAAOC,GACjBX,EAASW,GACTpB,GAAYA,EAAQ,OAACoB,QAAD,IAACA,SAAYC,IAElCX,WAAYA,EACZY,cAAe,SAACH,EAAOC,GAAR,OAAqBT,EAAa,OAACS,QAAD,IAACA,IAAY,KAC9DG,QAASjB,EACTkB,eAAgB,SAACC,GAAD,OAAYA,EAAO7D,WACnC8D,YAAa,SAACC,GAAD,OACZ,cAAC,IAAD,2BAAeA,GAAf,IAAuBC,MAAO1B,EAAY2B,UAAQ,QAIpD,cAAC,IAAD,OAMJ/B,EAAgBgC,aAAe,CAC9B5B,WAAY,qB,sHCvDA6B,EAAgC,SAAC3H,GAAW,IAAD,EACvD,EAAkBiG,mBAAS2B,YAAQC,OAAM,UAAC7H,EAAM2F,aAAP,QAAgB,OAAzD,mBAAOmC,EAAP,KAAUC,EAAV,KAEA,OACC,cAAC,IAAD,2BACK/H,EAAMgI,SADX,IAECrC,MAAOmC,EACPlC,SAAU,SAACqC,GACV,IAAKC,MAAML,OAAOI,EAAEE,OAAOxC,QAAS,CACnC,IAAMyC,EAAIC,WAAWJ,EAAEE,OAAOxC,QAEhB3F,EAAMsI,cAAgBF,GAAK,EAAIA,EAAI,IAEhDL,EAAKE,EAAEE,OAAOxC,SAIjB4C,OAAQ,SAACN,GACR,IAAIO,EAAIP,EAAEE,OAAOxC,MAAM8C,QAAQ,IAAK,IAC9BC,EAAaL,WAAWG,GAC9BT,EAAKH,YAAQc,IACb1I,EAAM2I,cAAcD,S,iCChCT,QAA0B,uC,yQC6BnC7F,EAAYxB,aAAW,SAAChB,GAAD,OAC5BC,YAAa,CACZsI,OAAQ,CACPhH,SAAU,YAEXiH,MAAO,CACNC,WAAYzI,EAAMmB,QAAQ,GAC1BuH,KAAM,QAKHC,EAAaC,sBAAW,SAC7BjJ,EACAkJ,GAEA,OAAO,cAAC,IAAD,aAAOC,UAAU,KAAKD,IAAKA,GAASlJ,OAU/BoJ,EAA8B,SAAC,GAKrC,IAJNjF,EAIK,EAJLA,YACAkF,EAGK,EAHLA,KACAC,EAEK,EAFLA,YACA1D,EACK,EADLA,SAEMG,EAAMC,cAEZ,EAAwBC,mBAA6B,MAArD,mBAAOC,EAAP,KAAaC,EAAb,KAEMK,EAAO,uCAAG,4BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UAEhBC,6BAFgB,yCAGgBxC,EAHhB,iBAGoCoF,YACpDF,EACA,gBANa,QACTzC,EADS,QASPC,SACPV,EAAQS,EAAIV,MAVE,2CAAH,qDAcbY,qBAAU,WACTN,MACE,IAEH,IAAMgD,EAAwB,CAC7B,CAAEC,MAAO,KAAMC,WAAY,KAAM3G,MAAO,IACxC,CACC0G,MAAO,YACPC,WAAY,aACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,uBACZA,EAAOqC,IAAIC,aADC,aACZ,EAAkBjG,YAEpB,CACC6F,MAAO,cACPC,WAAY,cACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,uBACZA,EAAOqC,IAAIC,aADC,aACZ,EAAkBhG,cAEpB,CACC4F,MAAO,OACPC,WAAY,OACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACZA,EAAOqC,IAAIC,aADC,iBACZ,EAAkBzG,YADN,aACZ,EAAwBA,OAE1B,CACCqG,MAAO,WACPC,WAAY,WACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACZA,EAAOqC,IAAIC,aADC,iBACZ,EAAkBvG,gBADN,aACZ,EAA4BA,WAE9B,CACCmG,MAAO,MACPC,WAAY,MACZ3G,MAAO,KAER,CACC0G,MAAO,QACPC,WAAY,QACZ3G,MAAO,IACP+G,YAAa,QACb1H,MAAO,QACP2H,eAAgB,SAACxC,GAAD,OACfK,YAAQC,OAAON,EAAO5B,WAIzB,EAA4CM,mBAAsB,IAAlE,mBAAO+D,EAAP,KAAuBC,EAAvB,KAEA,OACC,mCACE/D,EACA,cAAC,IAAD,CACCgE,KAAMhE,EAAKiE,QAAO,SAACC,GAAD,OAAQd,EAAYe,MAAK,SAACC,GAAD,OAAOA,GAAKF,EAAEjH,SACzDqG,QAASA,EACTe,sBAAsB,EACtBC,YAAU,EACVC,mBAAiB,EACjBT,eAAgBA,EAChBU,uBAAwB,SAACC,GACxBV,EAAkBU,EAAaX,gBAE/B,IAAMY,EAAiB1E,EAAKiE,QAAO,SAACC,GAAD,OAClCO,EAAaX,eAAeK,MAAK,SAACC,GAAD,OAAOA,GAAKF,EAAEjH,SAEhDyC,EAASgF,MAIX,cAAC,IAAD,OAeSC,EAAyD,SAAC,GAOhE,IANN1G,EAMK,EANLA,YACAkF,EAKK,EALLA,KACAC,EAIK,EAJLA,YACAwB,EAGK,EAHLA,KACAC,EAEK,EAFLA,QACAC,EACK,EADLA,qBAEM5J,EAAUyB,IACVoI,EAAKC,qBAAWC,KAEtB,EAAkClF,mBAAsB,IAAxD,mBAAOmF,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,kBAAMP,GAAQ,IAC5BQ,EAAW,uCAAG,sBAAA9E,EAAA,yDACK,GAApB2E,EAAUI,OADK,gCAEZP,EAAGQ,OAAOC,KAAK,mBAAoB,iBAFvB,wCAMnBV,EAAqBI,GACrBL,GAAQ,GAPW,2CAAH,qDAUjB,OACC,mCACC,eAAC,IAAD,CACCD,KAAMA,EACNa,QAASL,EACTM,YAAU,EACVC,oBAAqB7C,EAJtB,UAMC,cAAC,IAAD,CAAQ/I,UAAWmB,EAAQwH,OAA3B,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CACCkD,KAAK,QACL9K,MAAM,UACNwE,QAAS8F,EACT,aAAW,QAJZ,SAMC,cAAC,IAAD,MAED,cAAC,IAAD,CAAYS,QAAQ,KAAK9L,UAAWmB,EAAQyH,MAA5C,2BAGA,cAAC,IAAD,CAAQrD,QAAS8F,EAAatK,MAAM,UAApC,oBAGA,cAAC,IAAD,CAAQwE,QAAS+F,EAAavK,MAAM,UAApC,wBAKF,cAACoI,EAAD,CACCjF,YAAaA,EACbkF,KAAMA,EACNC,YAAaA,EACb1D,SAAU,SAACD,GAAD,OAAW0F,EAAa1F,a,sTCvL1BqG,EAAY,uCAAG,WAC3B7I,EACA8I,EACAlG,EACAkF,EACAiB,GAL2B,SAAAzF,EAAA,sEAOHwE,EAAGkB,WAAWT,KACrC,gDAR0B,kDAWR3F,EAAIqG,KAAJ,UACdzF,6BADc,gDACmDxD,IAZ3C,cAclB0D,UACPoE,EAAGoB,SAASX,KAAK,mCACjBQ,KAhByB,2CAAH,8DAqBnBI,EACL,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAQ,EAAjC,SACC,cAAC,IAAD,CAAcC,MAAO,CAAEC,WAAY,cA+PtBC,EA3PU,SAAC,GAA8B,IAA5B/G,EAA2B,EAA3BA,QAAS1B,EAAkB,EAAlBA,YAC9B0I,EAAK3B,qBAAW4B,KAEhBb,EAAIc,cACJhH,EAAMC,cACNiF,EAAKC,qBAAWC,KAEtB,EAAwBlF,mBAAkC,MAA1D,mBAAOC,EAAP,KAAaC,EAAb,KAEMK,EAAO,uCAAG,4BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UACdC,6BADc,uDAC0DxC,IAF7D,QACTyC,EADS,QAIPC,SACPV,EAAQS,EAAIV,MALE,2CAAH,qDAiBP4E,EAAO,SAACkC,EAA0BC,GAAwB,IAAD,KAC9D,UACCJ,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAM8G,KAEV,UACCH,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIEF,IAiBHnG,qBAAU,WACTN,MACE,CAACX,IAEJ,IAAM2D,EAAwB,CAC7B,CAAEC,MAAO,KAAMC,WAAY,KAAM3G,MAAO,IACxC,CACC0G,MAAO,UACPC,WAAY,OACZ3G,MAAO,IACPgH,eAAgB,SAACxC,GAAD,OACf6F,YAAM,IAAIlJ,KAAKqD,EAAO5B,UAExB,CACC8D,MAAO,OACPC,WAAY,SACZ3G,MAAO,KAER,CACC0G,MAAO,cACPC,WAAY,cACZ3G,MAAO,KAER,CACC0G,MAAO,OACPC,WAAY,eACZ3G,MAAO,IACPsK,WAAY,SAAC9F,GAAD,eACX,cAAC+F,EAAA,EAAD,CACCzE,MAAK,6BACHtB,EAAOgG,SAAShG,EAAOpE,GAAI,sBADxB,aACJ,EAA0DM,WAF5D,SAKC,wCAEG8D,EAAOgG,SAAShG,EAAOpE,GAAI,sBAF9B,aAEE,EACGK,gBAMR,CACCiG,MAAO,SACPC,WAAY,kBACZ3G,MAAO,IACP+G,YAAa,QACb1H,MAAO,QACP2H,eAAgB,SAACxC,GAAD,OACfK,YAAQC,OAAON,EAAO5B,UAExB,CACC8D,MAAO,YACPC,WAAY,SACZ3G,MAAO,IACP+G,YAAa,SACb1H,MAAO,SACPiL,WAAY,SAAC9F,GACZ,IAAIiG,EAAK,cAEHnJ,EAAckD,EAAOgG,SAC1BhG,EAAOpE,GACP,eAED,GAAIkB,EAAa,CAChB,IAAMG,EAAc+C,EAAOgG,SAC1BhG,EAAOpE,GACP,eAGDqK,EAAE,uBAAmBhJ,EAAYiJ,MAGlC,OACC,mCACEpJ,EACA,cAACqJ,EAAA,EAAD,CAAK1M,MAAM,QAAX,SACC,cAACsM,EAAA,EAAD,CAASzE,MAAO2E,EAAhB,SACC,cAAC,IAAD,CACCG,aAAcpG,EAAOgG,SAAShG,EAAOpE,GAAI,aAD1C,SAGC,cAAC,IAAD,UAKH,cAACuK,EAAA,EAAD,CAAK1M,MAAM,YAAX,SACC,cAACsM,EAAA,EAAD,CAASzE,MAAM,QAAf,SACC,cAAC,IAAD,YAQP,CACCY,MAAO,GACPmE,YAAY,EACZC,UAAU,EACVC,mBAAmB,EACnB/E,KAAM,GACNgF,cAAe,eACfV,WAAY,SAAC9F,GACZ,IAAMyG,EAAazG,EAAOqC,IAAuBvF,YACjD,OACC,mCACE2J,EACA,qCACE1B,EACD,cAACgB,EAAA,EAAD,CAASzE,MAAM,OAAf,SACC,cAAC0D,EAAA,EAAD,CACC/G,QAAS,kBAAMsF,EAAKvD,EAAOqC,IAAuB,SAClD4C,KAAK,QAFN,SAIC,cAAC,IAAD,QAGDF,EACAA,EACAA,KAGF,qCACC,cAACgB,EAAA,EAAD,CAASzE,MAAM,eAAf,SACC,cAAC0D,EAAA,EAAD,CACC/G,QAAS,kBA5IA,SAACwH,EAA0BC,GAAwB,IAAD,KACnE,UACCJ,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEtH,QAAS,IAAI3B,KAAQ+J,OAAQjB,KAEjC,UACCH,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIEF,GAkIOiB,CAAU3G,EAAOqC,IAAuB,eAEzC4C,KAAK,QAJN,SAMC,cAAC,IAAD,CACCmB,aAAcpG,EAAOgG,SAAShG,EAAOpE,GAAI,aAD1C,SAGC,cAAC,IAAD,UAIH,cAACmK,EAAA,EAAD,CAASzE,MAAM,OAAf,SACC,cAAC0D,EAAA,EAAD,CACC/G,QAAS,kBAAMsF,EAAKvD,EAAOqC,IAAuB,SAClD4C,KAAK,QAFN,SAIC,cAAC,IAAD,QAGF,cAACc,EAAA,EAAD,CAASzE,MAAM,OAAf,SACC,cAAC0D,EAAA,EAAD,CACC/G,QAAS,kBAAMsF,EAAKvD,EAAOqC,IAAuB,SAClD4C,KAAK,QAFN,SAIC,cAAC,IAAD,QAGF,cAACc,EAAA,EAAD,CAASzE,MAAM,SAAf,SACC,cAAC0D,EAAA,EAAD,CACC/G,QAAS,kBACRwG,EAAazE,EAAOpE,GAAc8I,EAAGlG,EAAKkF,EAAIzE,IAE/CgG,KAAK,QAJN,SAMC,cAAC,IAAD,gBAWT,OACC,mCACEtG,EACA,qCACC,kDACA,2CAAciI,YAAUtI,MACxB,cAAC,IAAD,CACCqE,KAAMhE,EACNsD,QAASA,EACTe,sBAAsB,EACtBC,YAAU,IAEX,cAAC,IAAD,UACC,cAAC4D,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QA7NlC,WAAO,IAAD,GACpB,UACCqH,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,WAwNE,yBAMF,cAAC,IAAD,O,+DC9SEtK,EAAYxB,aAAW,SAAChB,GAAD,OAC5BC,YAAa,CACZgB,KAAM,CACL,QAAS,CACRkB,OAAQnC,EAAMmB,QAAQ,GACtBuB,MAAO,SAGTU,UAAW,CACVd,QAAS,eACTI,MAAO,UA4HKsL,EAlHU,SAAC,GAAwB,IAAtBnI,EAAqB,EAArBA,KAAMoI,EAAe,EAAfA,SAC3BrD,EAAKC,qBAAWC,KAEhB/J,EAAUyB,IACV0L,EAAUC,iBAAwB,MAExC,EAA8BvI,mBAASC,EAAKjC,SAA5C,mBAAOA,EAAP,KAAgBwK,EAAhB,KACA,EAAwBxI,mBAASC,EAAKjB,MAAtC,mBAAOA,EAAP,KAAayJ,EAAb,KACA,EAAsCzI,mBAASC,EAAKrC,aAApD,mBAAOA,EAAP,KAAoB8K,EAApB,KACA,EAAsC1I,mBACrCC,EAAKd,aADN,mBAAOA,EAAP,KAAoBwJ,EAApB,KAGA,EAA4B3I,mBAASC,EAAKrB,QAA1C,mBAAOA,EAAP,KACA,GADA,KAC8BoB,mBAASC,EAAK9B,UAA5C,mBAAOA,EAAP,KAAgByK,EAAhB,KAEA,EAAoC5I,mBAAsB,MAA1D,mBAAO6I,EAAP,KAAmBC,EAAnB,KAEW7D,qBAAW4B,KACnBkC,IAAI,CACNC,IAAK,2CACL9B,SAAU4B,IAGX,IAuBMG,EAAe,SAACjH,GAA8B,IAAD,EAIlD,GAHC,OAADA,QAAC,IAADA,KAAGkH,iBAEU,UAAGZ,EAAQa,eAAX,aAAG,EAAiBC,iBACpB,CACZ,IAAMC,EAhBU,WACjB,IAAMC,EAAgB,GAOtB,OALe,OAAXnK,QAAW,IAAXA,OAAA,EAAAA,EAAajC,KAAM+C,EAAK/B,aAC3BoL,EAAIC,KACH,4GAGKD,EAQSE,GACf,GAAIH,EAAO9D,OAAS,EACnBP,EAAGoB,SAASX,KAAK4D,EAAQ,aACnB,CACN,IAAMI,EAhCO,WAAO,IAAD,EACrB,OAAO,2BACHxJ,GADJ,IAECjC,QAASA,EACTgB,KAAMA,EACNpB,YAAaA,EACbsB,cAAa,iBAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAajC,UAAf,QAAqB,EAClC0B,OAAQA,EACRT,QAASA,IAwBQuL,GAChBrB,EAASoB,MASZ,OAJA5I,qBAAU,WACLgI,GAAYI,MACd,CAACJ,IAGH,mCACC,uBACC5F,IAAKqF,EACLtO,UAAWmB,EAAQE,KACnBsO,aAAa,MACbtB,SAAUY,EAJX,UAMC,eAACW,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,wBACA,4BAAe,GAAX5J,EAAK/C,GAAU,eAAiB+C,EAAK/C,QAE1C,cAAC4M,EAAA,EAAD,CACCvI,MAAM,OACNwI,KAAK,OACLvI,UAAQ,EACR9B,MAAO4D,YAAYtF,EAAS,cAC5B2B,SAAU,SAACqC,GAAD,OAAOwG,EAAW,IAAIvK,KAAK+D,EAAEE,OAAOxC,WAE/C,cAACoK,EAAA,EAAD,CACCvI,MAAM,SACNC,UAAQ,EACR9B,MAAOV,EACPW,SAAU,SAACqC,GAAD,OAAOyG,EAAQzG,EAAEE,OAAOxC,UAEnC,cAACoK,EAAA,EAAD,CACCvI,MAAM,cACNC,UAAQ,EACR9B,MAAO9B,EACP+B,SAAU,SAACqC,GAAD,OAAO0G,EAAe1G,EAAEE,OAAOxC,UAE1C,cAAC+H,EAAA,EAAD,CAAKzN,UAAWmB,EAAQqC,UAAxB,SACC,cAAC,IAAD,CACCqC,WAAW,eACXH,MAAOP,EACPQ,SAAU,SAACD,GAAD,OAAWiJ,EAAejJ,QAGtC,cAACoK,EAAA,EAAD,CACCvI,MAAM,UACNyI,WAAS,EACTtK,MAAOvB,EACPwB,SAAU,SAACqC,GAAD,OAAO4G,EAAW5G,EAAEE,OAAOxC,gBCxD3BuK,EAlEY,SAAC,GAAgB,IAAdjC,EAAa,EAAbA,OACvBpB,EAAK3B,qBAAW4B,KAEhB/G,EAAMC,cACNiF,EAAKC,qBAAWC,KAEhB+D,EAAY,uCAAG,WAAOhJ,GAAP,eAAAO,EAAA,6DACpBwE,EAAGkF,WAAWzE,OADM,SAEJ3F,EAAIqG,KAAJ,UACZzF,6BADY,mCAEfT,GAJmB,QAEhBU,EAFgB,QAMZC,UACPoE,EAAGoB,SAASX,KAAK,iCACjB0E,EAAWxJ,EAAIV,OAEhB+E,EAAGkF,WAAWE,OAVM,2CAAH,sDAqBZD,EAAa,SAAClK,GAA0B,IAAD,KAC5C,UACC2G,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAMA,KACV,UACC2G,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SAUGuC,EAAU,IAAIxK,IAGpB,OAFAwK,EAAQvL,YAAc8J,EAAO9K,GAG5B,qCACC,wDACA,cAAC,EAAD,CAAMmL,SAAUY,EAAchJ,KAAMwJ,IACpC,eAAC,IAAD,WACC,cAACtB,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QApC5B,WAAO,IAAD,GACxB,UACCqH,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SA+BA,oBAGA,cAACiB,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAlB5B,WAAO,IAAD,GACxB,UACCqH,EAAGK,IAAI,mDADR,aACC,EACGC,SAFJ,SAGE,IAAIjJ,OAcJ,yBCIWoM,EA9DU,SAAC,GAAc,IAAZpK,EAAW,EAAXA,KACrB2G,EAAK3B,qBAAW4B,KAEhB/G,EAAMC,cACNiF,EAAKC,qBAAWC,KAEtB,IAAKjF,EAAM,OAAO,mDAElB,IAAMgJ,EAAY,uCAAG,WAAOhJ,GAAP,eAAAO,EAAA,6DACpBwE,EAAGkF,WAAWzE,OADM,SAEJ3F,EAAIqG,KAAJ,UACZzF,6BADY,mCAEfT,GAJmB,QAEhBU,EAFgB,QAMZC,UACPoE,EAAGoB,SAASX,KAAK,iCACjB0E,EAAWxJ,EAAIV,OAEhB+E,EAAGkF,WAAWE,OAVM,2CAAH,sDAaZD,EAAa,SAAClK,GAA2B,IAAD,KAC7C,UACC2G,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAMA,KAEV,UACC2G,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SAUH,OACC,qCACC,wDACA,cAAC,EAAD,CAAMmB,SAAUY,EAAchJ,KAAMA,IACpC,eAAC,IAAD,WACC,cAACkI,EAAA,EAAD,CACCrC,QAAQ,YACR/K,MAAM,UACNwE,QAAS,kBAAM4K,EAAWlK,IAH3B,oBAOA,cAACkI,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAnB5B,WAAO,IAAD,GACxB,UACCqH,EAAGK,IAAI,mDADR,aACC,EACGC,SAFJ,SAGE,IAAIjJ,OAeJ,yB,kBCiEWqM,EA/GmB,SAAC,GAA2B,IAAzB1K,EAAwB,EAAxBA,QAAS2K,EAAe,EAAfA,SAIvCzK,GAHKmF,qBAAW4B,KAEZC,cACE/G,eAEZ,EAAwBC,mBAAsC,MAA9D,mBAAOC,EAAP,KAAaC,EAAb,KAEMK,EAAO,uCAAG,4BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UACdC,6BADc,qDACwD6J,IAF3D,QACT5J,EADS,QAIPC,SACPV,EAAQS,EAAIV,MALE,2CAAH,qDASbY,qBAAU,WACTN,MACE,CAACX,IAEJ,IAAM2D,EAAwB,CAC7B,CAAEC,MAAO,UAAWC,WAAY,WAAY3G,MAAO,KACnD,CACC0G,MAAO,YACPC,WAAY,aACZ3G,MAAO,IACPsK,WAAY,SAAC9F,GAAD,eACX,cAAC+F,EAAA,EAAD,CAASzE,MAAK,UAAEtB,EAAOqC,IAAIC,aAAb,aAAE,EAAkBhG,YAAlC,SACC,wCAAM0D,EAAOqC,IAAIC,aAAjB,aAAM,EAAkBjG,gBAI3B,CACC6F,MAAO,OACPC,WAAY,OACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACXA,EAAOgG,SAAShG,EAAOpE,GAAI,gBADhB,iBACZ,EAAgDC,YADpC,aACZ,EAAsDA,OAExD,CACCqG,MAAO,WACPC,WAAY,WACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACXA,EAAOgG,SAAShG,EAAOpE,GAAI,gBADhB,iBACZ,EAAgDG,gBADpC,aACZ,EAA0DA,WAE5D,CACCmG,MAAO,MACPC,WAAY,MACZ3G,MAAO,IACP+G,YAAa,SACb1H,MAAO,SACP4N,KAAM,UAEP,CACCvG,MAAO,QACPC,WAAY,iBACZ3G,MAAO,IACP+G,YAAa,QACb1H,MAAO,QACP4N,KAAM,SACNjG,eAAgB,SAACxC,GAAD,OACfK,YAAQC,OAAON,EAAO5B,UAExB,CACC8D,MAAO,SACPC,WAAY,kBACZ3G,MAAO,IACP+G,YAAa,QACb1H,MAAO,QACP4N,KAAM,SACNjG,eAAgB,SAACxC,GAAD,OACfK,YAAQC,OAAON,EAAO5B,WAIrB8K,EAAc,EAOlB,OALI,OAAJvK,QAAI,IAAJA,KAAMwK,SAAQ,SAACtG,GACKA,EAAEuG,gBACrBF,GAAerG,EAAEvF,UAIjB,mCACEqB,EACA,qCACC,uDACA,2CAAciI,YAAUtI,MACxB,sBAAK6G,MAAO,CAAE3K,OAAQ,IAAKgB,MAAO,QAAlC,UACC,cAAC,IAAD,CAAYX,MAAM,QAAlB,SACC,6BACC,qDAAsBwO,YAAUH,UAGlC,cAAC,IAAD,CACCvG,KAAMhE,EACNsD,QAASA,EACTe,sBAAsB,EACtBC,YAAU,UAKb,cAAC,IAAD,O,SCvGE3H,EAAYxB,aAAW,SAAChB,GAAD,OAC5BC,YAAa,CACZ0N,UAAW,CACVjL,MAAO,IACPnB,SAAU,WACVnB,IAAK,GACLD,MAAO,GACPqQ,OAAQ,SA2SIC,EAlSU,SAAC,GAAc,IAAD,MAAX5K,EAAW,EAAXA,KACrB+F,EAAIc,cACJhH,EAAMC,cACNiF,EAAKC,qBAAWC,KAEhB/J,EAAUyB,IACVgK,EAAK3B,qBAAW4B,KAGtB,EAA0B7G,mBAAsC,MAAhE,mBAAO8K,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,4BAAAxK,EAAA,sEACFV,EAAIW,IAAJ,UACdC,6BADc,gDAEhBT,QAFgB,IAEhBA,OAFgB,EAEhBA,EAAM/B,YAFU,iBAGRoF,YAAW,OAACrD,QAAD,IAACA,OAAD,EAACA,EAAMjC,QAAS,gBAJjB,YACd2C,EADc,QAMZC,QANY,yCAOZD,EAAIV,MAPQ,gCASZ,MATY,2CAAH,qDAaZM,EAAO,uCAAG,4BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UACdC,6BADc,4DACwDT,QADxD,IACwDA,OADxD,EACwDA,EAAM/C,KAFjE,QACTyD,EADS,QAIPC,SACPmK,EAASpK,EAAIV,MALC,2CAAH,qDASPgL,EAAQ,uCAAG,8BAAAzK,EAAA,6DACZ6I,EAAmB,GADP,SAGE2B,IAHF,cAIL,OADLE,EAHU,QAKf7B,EAAOE,KAAK,oCAEP,OAALuB,QAAK,IAALA,KAAOL,SAAQ,SAACtG,GACf,GAAe,MAAXA,EAAEP,MACLyF,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,mFAGM,GAAIhH,EAAEiH,KAAO,EAAG,CAAC,IAAD,EACtB/B,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,sBAC2BhH,EAAEP,aAD7B,aAC2B,EAASjG,UADpC,+DAGM,CAAC,IAAD,EAGS,EAFT0N,EAAOH,EAAI9G,MAAK,SAACC,GAAD,OAAOA,EAAEnH,IAAMiH,EAAEgH,WACjCG,EAAC,iBAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAMD,WAAT,QAAgB,EACvB,GAAIjH,EAAEiH,IAAME,EACXjC,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,sBAC2BhH,EAAEP,aAD7B,aAC2B,EAASjG,UADpC,kDACuF2N,EADvF,UApBY,kBA4BTjC,GA5BS,2CAAH,qDAoCd,GALAxI,qBAAU,WACTN,MACE,KAGEN,EAAM,OAAO,mDAElB,IAAMsL,EAAa,WAAO,IAAD,GACxB,UACC3E,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SAgDGsE,EAAO,uCAAG,4BAAAhL,EAAA,sEACMyK,IADN,aACT5B,EADS,QAEJ9D,OAAS,GAFL,uBAGdP,EAAGQ,OAAOC,KAAK4D,EAAQ,cAHT,0CAOSrE,EAAGkB,WAAWT,KACrC,mDARc,2EAYfT,EAAGkF,WAAWzE,OAZC,UAaC3F,EAAIqG,KAAJ,UACZzF,6BADY,iDACsDT,EAAK/C,GAD3D,sBAC2E8I,EAAEyF,QAAQvO,KAdtF,eAgBP0D,UACPoE,EAAGoB,SAASX,KAAK,uCACjB8F,KAEDvG,EAAGkF,WAAWE,OApBC,4CAAH,qDAuBb,OACC,qCACC,sDACA,eAAC,IAAD,WACEnK,EAAK7B,aACL,qBAAKsN,IAAKC,IAAgB3R,UAAWmB,EAAQ4M,YAE9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,mBAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkB9L,EAAK/C,UAGzB,eAAC0O,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,qBAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkB5E,YAAMlH,EAAKjC,gBAG/B,eAAC4N,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,uBAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkB9L,EAAKjB,YAGzB,eAAC4M,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,4BAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkB9L,EAAKrC,mBAGzB,eAACgO,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,6BAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,oBAAkB9L,EAAKd,mBAAvB,aAAkB,EAAkB5B,iBAGtC,eAACqO,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,4BAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,oBAAkB9L,EAAKd,mBAAvB,aAAkB,EAAkB3B,iBAGtC,eAACoO,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,uBAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkBpB,YAAU1K,EAAKrB,eAGnC,eAACgN,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,wBAID,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,IAAD,UAAkB9L,EAAK9B,eAGxB8B,EAAK7B,aACL,eAACwN,EAAA,EAAD,CAAMC,WAAS,EAACtQ,QAAS,EAAzB,UACC,cAACqQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,cAACtE,EAAA,EAAD,CAAKpL,UAAU,QAAQ2P,WAAW,OAAlC,6BAID,eAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACC,cAAC,IAAD,oBAAkB9L,EAAK1B,mBAAvB,aAAkB,EAAkBiJ,OACpC,8BACC,gCAAQU,YAAUjI,EAAK5B,yBAM3B,uBACA,cAAC4N,EAAA,EAAD,IACChM,GAAQ,cAAC,EAAD,CAAWL,QAAS,IAAI3B,KAAQsM,SAAUtK,EAAK/C,QAGzD,eAAC,IAAD,WACC,cAACiL,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAASgM,EAArD,0BAGCtL,EAAKzB,UAAY,IAAMyB,EAAK7B,aAC5B,cAAC+J,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAASiM,EAArD,sBAKCvL,EAAK7B,aACN,qCACC,cAAC+J,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QA9K7B,WAAO,IAAD,KACzB,UACCqH,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEtH,QAAS,IAAI3B,KAAQ+J,OAAQ/H,KAEjC,UACC2G,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,eAmKE,0BAGA,cAACiB,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QA/LpC,WAAO,IAAD,KAClB,UACCqH,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAMA,KAEV,UACC2G,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SAoLE,kBAGA,cAACiB,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAtKlC,WAAO,IAAD,IACd2M,EAAI,IAAIjN,IACdiN,EAAEhO,YAAc+B,EAAK/B,aAErB,UACC0I,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAMiM,KAEV,UACCtF,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,WAwJE,oBAGA,cAACiB,EAAA,EAAD,CACCrC,QAAQ,YACR/K,MAAM,YACNwE,QAAS,kBAAMwG,EAAa9F,EAAK/C,GAAI8I,EAAGlG,EAAKkF,EAAIuG,IAHlD,8B,wCCOSY,GAjSe,SAAC,GAAyB,IAAD,YAAtBvM,EAAsB,EAAtBA,QAASoI,EAAa,EAAbA,OACnCpB,EAAK3B,qBAAW4B,KAEhB/G,EAAMC,cACNiF,EAAKC,qBAAWC,KAEtB,EAAwBlF,mBAAsC,MAA9D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAsC,MAApE,mBAAOoM,EAAP,KAAgBC,EAAhB,KAEM9L,EAAO,uCAAG,8BAAAC,EAAA,sEACGV,EAAIW,IAAJ,UACdC,6BADc,+DACwDsH,SADxD,aACwD,EAAQ9K,KAFnE,QACTyD,EADS,QAIPC,UACPV,EAAQS,EAAIV,MACZoM,EAAWC,KAAKC,MAAMD,KAAKE,UAAU7L,EAAIV,SAN3B,2CAAH,qDAUP+K,EAAY,uCAAG,4BAAAxK,EAAA,sEACFV,EAAIW,IAAJ,UACdC,6BADc,yCAEhBsH,EAAO9J,YAFS,iBAGRoF,YAAY0E,EAAOhK,QAAS,gBAJlB,YACd2C,EADc,QAMZC,QANY,yCAOZD,EAAIV,MAPQ,gCASZ,MATY,2CAAH,qDAaZgL,EAAQ,uCAAG,8BAAAzK,EAAA,6DACZ6I,EAAmB,GADP,SAGE2B,IAHF,cAIL,OADLE,EAHU,QAKf7B,EAAOE,KAAK,oCAER,OAAJtJ,QAAI,IAAJA,KAAMwK,SAAQ,SAACtG,GACd,GAAe,MAAXA,EAAEP,MACLyF,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,mFAGM,GAAIhH,EAAEiH,KAAO,EAAG,CAAC,IAAD,EACtB/B,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,sBAC2BhH,EAAEP,aAD7B,aAC2B,EAASjG,UADpC,+DAGM,CAAC,IAAD,EAGS,EAFT0N,EAAOH,EAAI9G,MAAK,SAACC,GAAD,OAAOA,EAAEnH,IAAMiH,EAAEgH,WACjCG,EAAC,iBAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAMD,WAAT,QAAgB,EACvB,GAAIjH,EAAEiH,IAAME,EACXjC,EAAOE,KAAP,oBACcpF,EAAEgH,QADhB,sBAC2BhH,EAAEP,aAD7B,aAC2B,EAASjG,UADpC,kDACuF2N,EADvF,UApBY,kBA4BTjC,GA5BS,2CAAH,qDA+BRoD,EAAQ,uCAAG,gCAAAjM,EAAA,sEACKyK,IADL,aACV5B,EADU,QAEL9D,OAAS,GAFJ,uBAGfP,EAAGQ,OAAOC,KAAK4D,EAAQ,cAHR,0CAOEvJ,EAAIqG,KAAJ,UACdzF,6BADc,oEAC6DsH,SAD7D,aAC6D,EAAQ9K,IACtF+C,GATe,QAOVU,EAPU,QAYRC,UACPoH,EAASrH,EAAIV,KAEb+E,EAAGoB,SAASX,KAAK,iCACjB0E,KAhBe,4CAAH,qDAsBRA,EAAa,WAAO,IAAD,KACxB,UACCvD,EAAGK,IAAI,uCADR,aACC,EAAwCC,SADzC,SAIE,CAAEjH,KAAM+H,KACV,UACCpB,EAAGK,IAAI,sCADR,aACC,EAAuCC,SADxC,SAIE,SA0CH,EAA4DlH,oBAAS,GAArE,mBAAO0M,EAAP,KAA+BC,EAA/B,KAEA,EAA4C3M,mBAAsB,IAAlE,mBAAO+D,EAAP,KAAuBC,EAAvB,KAEAnD,qBAAU,WACTmH,GAAUzH,MACR,CAACX,IAEJ,IAAM2D,EAAwB,CAC7B,CAAEC,MAAO,KAAMC,WAAY,KAAM3G,MAAO,IACxC,CAAE0G,MAAO,UAAWC,WAAY,WAAY3G,MAAO,KACnD,CACC0G,MAAO,YACPC,WAAY,aACZ3G,MAAO,IACPsK,WAAY,SAAC9F,GAAD,eACX,cAAC+F,EAAA,EAAD,CAASzE,MAAK,UAAEtB,EAAOqC,IAAIC,aAAb,aAAE,EAAkBhG,YAAlC,SACC,wCAAM0D,EAAOqC,IAAIC,aAAjB,aAAM,EAAkBjG,gBAI3B,CACC6F,MAAO,OACPC,WAAY,OACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACZA,EAAOqC,IAAIC,aADC,iBACZ,EAAkBzG,YADN,aACZ,EAAwBA,OAE1B,CACCqG,MAAO,WACPC,WAAY,WACZ3G,MAAO,IACP4G,YAAa,SAACpC,GAAD,yBACZA,EAAOqC,IAAIC,aADC,iBACZ,EAAkBvG,gBADN,aACZ,EAA4BA,WAE9B,CACCmG,MAAO,MACPC,WAAY,MACZ3G,MAAO,IACP+G,YAAa,SACb1H,MAAO,SACP4N,KAAM,SACN3C,WAAY,SAAC9F,GAAD,OACX,cAAC,GAAD,CACCrB,KAAMA,EACNC,QAASA,EACToB,OAAQA,EACRsL,UAAU,UAIb,CACCpJ,MAAO,QACPC,WAAY,iBACZ3G,MAAO,IACP+G,YAAa,QACb1H,MAAO,QACP4N,KAAM,SACNjG,eAAgB,SAACxC,GAAD,OACfK,YAAQC,OAAON,EAAO5B,WAIzB,OAAKsI,EAGJ,qCACC,eAACP,EAAA,EAAD,CAAKpL,UAAU,SAAf,UACC,sCAAI2L,SAAJ,aAAI,EAAQpK,cACZ,uBACA,oDAAWoK,SAAX,iBAAW,EAAQ7I,mBAAnB,aAAW,EAAqB5B,aAChC,8DAAqByK,SAArB,iBAAqB,EAAQzK,iBAA7B,aAAqB,EAAmBC,UAAxC,oBAA6D2J,YAAK,UACjEa,SADiE,aACjE,EAAQhK,eAITiC,EACA,qCACC,uDACA,2CAAciI,YAAUtI,MACxB,qBAAK6G,MAAO,CAAE3K,OAAQ,IAAKgB,MAAO,QAAlC,SACC,cAAC,IAAD,CACCmH,KAAMhE,EACNsD,QAASA,EACTe,sBAAsB,EACtBC,YAAU,EACVC,mBAAiB,EACjBqI,yBAAuB,EACvB9I,eAAgBA,EAChBU,uBAAwB,SAACC,GAAD,OACvBV,EAAkBU,EAAaX,qBAIlC,cAAC,KAAD,CACC7F,YAAa8J,EAAO9J,YACpBkF,KAAM4E,EAAOhK,QACbqF,YAAapD,EAAK6M,KAAI,SAAC3I,GAAD,OAAOA,EAAEgH,WAC/BtG,KAAM6H,EACN5H,QAAS6H,EACT5H,qBAlIkB,SAACrF,GAEvB,IAAIqN,EAAQ,EACNC,EAAG,OAAG/M,QAAH,IAAGA,OAAH,EAAGA,EACT6M,KAAI,SAAC3I,GAAD,OAAOA,EAAEjH,MACd+P,OACAC,UACEF,GAAOA,EAAIzH,OAAS,IAAGwH,EAAQC,EAAI,IAEvC,IAAMG,EAAiCzN,EAAMoN,KAAI,SAAC3I,EAAGiJ,GAAO,IAAD,EAE1D,MAAO,CACNlQ,GAAI6P,EAAQK,EAAI,EAChB7C,SAAQ,UAAEvC,SAAF,aAAE,EAAQ9K,GAClBiO,QAAShH,EAAEjH,GACX0G,MAAOO,EAAEP,MACTwH,IANW,EAOXiC,MAAOlJ,EAAEkJ,MACTC,WAAYnJ,EAAEmJ,WACd1O,OAAQuF,EAAEkJ,MACV3C,gBAVW,EAUMvG,EAAEmJ,WACnBC,aAAc,EACdC,SAAU,MAINC,EAAK,8BAAQxN,QAAR,IAAQA,IAAQ,IAAhB,aAAwBkN,IACnCjN,EAAQuN,MAyGL,eAAC,IAAD,WACC,cAACtF,EAAA,EAAD,CACCrC,QAAQ,YACR/K,MAAM,UACNwE,QAAO,sBAAE,sBAAAiB,EAAA,yDAhKU8L,KAAKE,UAAUvM,IAASqM,KAAKE,UAAUJ,GAgKjD,gCAEiBpH,EAAGkB,WAAWT,KACrC,0EAHM,yCAMNgH,IANM,0BAWRtC,IAXQ,2CAHV,oBAmBA,cAAChC,EAAA,EAAD,CACCrC,QAAQ,YACR/K,MAAM,UACNwE,QAAS,kBAAMoN,GAA0B,IAH1C,uBAQA,cAACxE,EAAA,EAAD,CAAQrC,QAAQ,YAAY/K,MAAM,UAAUwE,QAASkN,EAArD,kBAIC1I,EAAewB,OAAS,GACxB,cAAC4C,EAAA,EAAD,CACCrC,QAAQ,YACR/K,MAAM,YACNwE,QAjLqB,WAAO,IAAD,EAC3BkK,EAAO,iBACZxJ,QADY,IACZA,OADY,EACZA,EAAMiE,QAAO,SAACC,GAAD,OAAgD,MAAzCJ,EAAeK,MAAK,SAACC,GAAD,OAAOA,GAAKF,EAAEjH,gBAD1C,QAEZ,KAEDgD,EAAQuJ,GACRzF,EAAkB,KAwKb,yCAWH,cAAC,IAAD,OAnFiB,yDAkGf0J,GAAyB,SAAC,GAA0C,IAAD,MAAvCzN,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASoB,EAAwB,EAAxBA,OAAQsL,EAAgB,EAAhBA,UACxD,OAAY,MAAR3M,EAAqB,iDAEP,QAAd2M,EAEF,cAAC9C,EAAA,EAAD,CACCpK,MAAK,UAAEO,EAAKmE,MAAK,SAACD,GAAD,OAAOA,EAAEjH,IAAMoE,EAAOpE,aAAlC,aAAE,EAAqCkO,IAC5C5J,UAAQ,EACRuI,KAAK,SACLjE,QAAQ,WACR6H,WAAY,CAAElH,MAAO,CAAEpK,UAAW,WAClCsD,SAAU,SAACqC,GACV,IAAI4L,EAAE,aAAO3N,GACTiM,EAAI0B,EAAGxJ,MAAK,SAACD,GAAD,OAAOA,EAAEjH,IAAMoE,EAAOpE,MACtC,GAAIgP,EAAG,CACN,IAAKjK,MAAML,OAAOI,EAAEE,OAAOxC,QAAS,CACnC,IAAMyC,EAAI0L,SAAS7L,EAAEE,OAAOxC,OACxByC,EAAI,IAAG+J,EAAEd,IAAMjJ,GAEpBjC,GAAWA,EAAQ,aAAI0N,QAO1B,cAAC,KAAD,CACClO,MAAK,oBAAEO,EAAKmE,MAAK,SAACD,GAAD,OAAOA,EAAEjH,IAAMoE,EAAOpE,aAAlC,aAAE,EAAqCmQ,aAAvC,QAAgD,KACrDhL,eAAe,EACfK,cAAe,SAAChD,GACf,IAAIkO,EAAE,aAAO3N,GACTiM,EAAI0B,EAAGxJ,MAAK,SAACD,GAAD,OAAOA,EAAEjH,IAAMoE,EAAOpE,MAClCgP,IACHA,EAAEmB,MAAQ3N,EACVQ,EAAQ,aAAI0N,MAGd7L,QAAS,CACRP,UAAU,EACVsE,QAAS,WACT6H,WAAY,CAAElH,MAAO,CAAEpK,UAAW,cCpTxB4C,UAlDY,WAC1B,MAAgCe,mBAAuB,QAAvD,mBAAO8N,EAAP,KAAiBC,EAAjB,KACA,EAAkC/N,mBAAiB,IAAnD,mBAAOgO,EAAP,KAAkBC,EAAlB,KAEMrH,EAAK3B,qBAAW4B,KACtBD,EAAGmC,IAAI,CAAEC,IAAK,8BAA+B9B,SAAU6G,IACvDnH,EAAGmC,IAAI,CAAEC,IAAK,+BAAgC9B,SAAU+G,IAExD,IAAMC,EAAkBC,eAAeC,QAAQ,uBAC/C,EAAkCpO,mBACjCkO,EAAkB5B,KAAKC,MAAM2B,GAAmB,MADjD,mBAAO3Q,EAAP,KAAkB8Q,EAAlB,KAeA,OACC,qCACC,cAAC,WAAD,IAEA,cAAC,IAAD,CACC3O,MAAK,OAAEnC,QAAF,IAAEA,SAAayD,EACpBrB,SAjB2B,SAACD,GAC1BA,GACH2O,EAAa3O,GACbyO,eAAeG,QAAQ,sBAAuBhC,KAAKE,UAAU9M,MAE7D2O,EAAa,MACbF,eAAeI,WAAW,wBAE3BR,EAAY,WAWX,uBACCxQ,EACA,qCACc,QAAZuQ,GACA,cAAC,EAAD,CAAMlO,QAAS,IAAI3B,KAAQC,YAAaX,EAAUL,KAEtC,UAAZ4Q,GAAwB,cAAC,EAAD,CAAQ9F,OAAQzK,IAC5B,QAAZuQ,GAAsB,cAAC,EAAD,eAAUE,IACpB,QAAZF,GAAsB,cAAC,EAAD,eAAUE,IACpB,cAAZF,GAA4B,cAAC,GAAD,eAAYE,OAG1C","file":"static/js/16.95fcc060.chunk.js","sourcesContent":["import { FC } from \"react\";\r\n\r\nconst PageCommands: FC = (props) => {\r\n\treturn <div className=\"page-commands\">{props.children}</div>;\r\n};\r\n\r\nexport default PageCommands;\r\n","import {\r\n\tBadge,\r\n\tcreateStyles,\r\n\tmakeStyles,\r\n\tPaper,\r\n\tTheme,\r\n\twithStyles,\r\n} from \"@material-ui/core\";\r\nimport { Label } from \"@material-ui/icons\";\r\nimport { FC } from \"react\";\r\nimport { classicNameResolver } from \"typescript\";\r\n\r\nexport const StyledBadge = withStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbadge: {\r\n\t\t\tright: -3,\r\n\t\t\ttop: 13,\r\n\t\t\tborder: `2px solid ${theme.palette.background.paper}`,\r\n\t\t\tpadding: \"0 4px\",\r\n\t\t\tbackgroundColor: \"gray\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t})\r\n)(Badge);\r\n\r\nexport const ConfirmedBadge = withStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbadge: {\r\n\t\t\tright: -3,\r\n\t\t\ttop: 13,\r\n\t\t\tborder: `2px solid ${theme.palette.background.paper}`,\r\n\t\t\tpadding: \"0 4px\",\r\n\t\t\tbackgroundColor: \"green\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t})\r\n)(Badge);\r\n\r\nexport const StyledViewPage: FC = (props) => {\r\n\tconst useViewPageStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\tflexGrow: 1,\r\n\t\t\t},\r\n\t\t\tpaper: {\r\n\t\t\t\tpadding: theme.spacing(2),\r\n\t\t\t\tcolor: theme.palette.text.secondary,\r\n\t\t\t\tminHeight: 400,\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useViewPageStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper className={classes.paper}>{props.children}</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface IStyledViewFieldProps {\r\n\theight?: number;\r\n\tmaxWidth?: number;\r\n}\r\n\r\nexport const StyledViewField: FC<IStyledViewFieldProps> = ({\r\n\theight,\r\n\tmaxWidth,\r\n\tchildren,\r\n}) => {\r\n\tconst useViewPageStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tpadding: \"0 2px\",\r\n\t\t\t\tborderBottom: \"2px dotted #e0e0e0\",\r\n\t\t\t\theight: height ?? \"initial\",\r\n\t\t\t\tmaxWidth: maxWidth ?? 300,\r\n\t\t\t\tminHeight: 20,\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useViewPageStyles();\r\n\r\n\treturn <div className={classes.root}>{children}</div>;\r\n};\r\n\r\ninterface IInlineListProps {\r\n\talign?: \"left\" | \"center\" | \"right\";\r\n\twrap?: boolean;\r\n\tclassName?: string;\r\n}\r\n\r\nexport const InlineList: FC<IInlineListProps> = ({\r\n\talign,\r\n\twrap,\r\n\tclassName,\r\n\tchildren,\r\n}) => {\r\n\tconst useStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\ttextAlign: align,\r\n\t\t\t\twhiteSpace: wrap ? \"initial\" : \"nowrap\",\r\n\t\t\t\t\"& > ul\": {\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpaddingInlineStart: 0,\r\n\t\t\t\t},\r\n\t\t\t\t\"& ul ul\": {\r\n\t\t\t\t\tpadding: \"20px\",\r\n\t\t\t\t},\r\n\t\t\t\t\"& li\": {\r\n\t\t\t\t\tlistStyle: \"none\",\r\n\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\tverticalAlign: \"top\",\r\n\t\t\t\t\tmargin:\r\n\t\t\t\t\t\talign == \"left\"\r\n\t\t\t\t\t\t\t? \"0 10px 0 0\"\r\n\t\t\t\t\t\t\t: align == \"center\"\r\n\t\t\t\t\t\t\t? \"0 5px 0 5px\"\r\n\t\t\t\t\t\t\t: \"0 0 0 10px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.root} ${className ?? \"\"}`}>\r\n\t\t\t<ul>{children}</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface IInlineListItemProps {\r\n\talign?: \"left\" | \"center\" | \"right\";\r\n\twidth?: number;\r\n}\r\nexport const InlineListItem: FC<IInlineListItemProps> = ({\r\n\talign,\r\n\twidth,\r\n\tchildren,\r\n}) => {\r\n\tconst useStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\troot: {\r\n\t\t\t\ttextAlign: align ?? \"left\",\r\n\t\t\t\twidth: width ? `${width}px` : \"initial\",\r\n\t\t\t},\r\n\t\t})\r\n\t);\r\n\tconst classes = useStyles();\r\n\r\n\treturn <li className={classes.root}>{children}</li>;\r\n};\r\n\r\nexport const useClickableStyle = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t\"&, & *\": {\r\n\t\t\t\tcursor: \"pointer !important\",\r\n\t\t\t\tcolor: \"black !important\",\r\n\t\t\t},\r\n\t\t\t\"&:hover *\": {\r\n\t\t\t\tcolor: \"blue !important\",\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n);\r\n","import { GPCAccount, QuickProfile } from \"./models\";\r\n\r\nexport class Unit {\r\n\tid: number = 0;\r\n\tunit: string = \"\";\r\n}\r\n\r\nexport class Category {\r\n\tid: number = 0;\r\n\tcategory: string = \"\";\r\n}\r\n\r\nexport class Warehouse {\r\n\tid: number = 0;\r\n\twarehouse: string = \"\";\r\n\taccountNo: string = \"\";\r\n\taccount?: GPCAccount;\r\n}\r\n\r\nexport class Stock {\r\n\tid: number = 0;\r\n\tstockName: string = \"\";\r\n\tdescription: string = \"\";\r\n\tunitId: number = 0;\r\n\tcategoryId: number = 0;\r\n\tunit?: Unit;\r\n\tcategory?: Category;\r\n}\r\n\r\nexport class InventoryDoc {\r\n\tid: number = 0;\r\n\tdocDate: Date = new Date();\r\n\tdescription: string = \"\";\r\n\twarehouseId: number = 0;\r\n\tremarks: string = \"\";\r\n\tisConfirmed: boolean = false;\r\n\tdateConfirmed?: Date;\r\n\tconrirmedByProfileId?: number;\r\n\tconfirmedBy?: QuickProfile;\r\n\twarehouse?: Warehouse;\r\n\titemCount: number = 0;\r\n}\r\n\r\nexport class InventoryDocItem {\r\n\tid: number = 0;\r\n\tparentId: number = 0;\r\n}\r\n\r\nexport class Delivery extends InventoryDoc {\r\n\tpoNo: string = \"\";\r\n\tdrNo: string = \"\";\r\n\tamount: number = 0;\r\n\tsupplier: string = \"\";\r\n}\r\n\r\nexport class DeliveryItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice?: number = 0;\r\n\tstock?: Stock;\r\n}\r\n\r\nexport class PriceList extends InventoryDoc {}\r\n\r\nexport class PriceListItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n}\r\n\r\nexport class AccountOrder extends InventoryDoc {\r\n\torNo: string = \"\";\r\n\taccountNo: string = \"\";\r\n\taccount?: GPCAccount;\r\n\tamount: number = 0;\r\n}\r\n\r\nexport class AccountOrderItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n\tamount: number = 0;\r\n\ttotalPointValue: number = 0;\r\n\tdiscountRate: number = 0;\r\n\tdiscount: number = 0;\r\n}\r\n\r\nexport class WarehouseOrder extends InventoryDoc {\r\n\torNo: string = \"\";\r\n\ttoWarehouseId: number = 0;\r\n\ttoWarehouse?: Warehouse;\r\n\tamount: number = 0;\r\n}\r\n\r\nexport class WarehouseOrderItem extends InventoryDocItem {\r\n\tstockId: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n\tamount: number = 0;\r\n\ttotalPointValue: number = 0;\r\n\tdiscountRate: number = 0;\r\n\tdiscount: number = 0;\r\n}\r\n\r\nexport class Inventory {\r\n\tid: number = 0;\r\n\tqty: number = 0;\r\n\tprice: number = 0;\r\n\tpointValue: number = 0;\r\n\tstock?: Stock;\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../../style.scss\";\r\nimport { useNavigation } from \"../../../../lib/hooks\";\r\n\r\nconst LandingMenu: FC = () => {\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"delivery\")}>Delivery</Button>\r\n\t\t\t<Button onClick={() => go(\"pricelist\")}>Price List</Button>\r\n\t\t\t<Button onClick={() => go(\"account-order\")}>Account Order</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse-order\")}>Warehouse Order</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"inventory-report\")}>Inventory</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"units\")}>Units</Button>\r\n\t\t\t<Button onClick={() => go(\"categories\")}>Categories</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse\")}>Warehouse</Button>\r\n\t\t\t<Button onClick={() => go(\"stocks\")}>Stocks</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Inventory</h3>\r\n\r\n\t\t\t<p>Please select your task</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\nimport { Warehouse } from \"../../lib/models-inventory\";\r\n\r\ninterface IProps {\r\n\tvalue?: Warehouse;\r\n\tonChange?: (value: Warehouse | undefined) => void;\r\n\trefresh?: Date;\r\n\tinputLabel?: string;\r\n}\r\n\r\nexport const WarehouseSelect: FC<IProps> = ({\r\n\tvalue,\r\n\tonChange,\r\n\trefresh,\r\n\tinputLabel,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<Warehouse[] | null>(null);\r\n\tconst [val, setValue] = useState<Warehouse | null>(null);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse/list`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t\tsetValue(value ?? null);\r\n\t\tsetInputValue(value?.warehouse ?? \"\");\r\n\t}, [refresh, value]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tvalue={val}\r\n\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\tsetValue(newValue);\r\n\t\t\t\t\t\tonChange && onChange(newValue ?? undefined);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\tonInputChange={(event, newValue) => setInputValue(newValue ?? \"\")}\r\n\t\t\t\t\toptions={data}\r\n\t\t\t\t\tgetOptionLabel={(option) => option.warehouse}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} label={inputLabel} required />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nWarehouseSelect.defaultProps = {\r\n\tinputLabel: \"Select Warehouse\",\r\n};\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { FC, useState } from \"react\";\r\nimport { FDouble } from \"../lib/common\";\r\n\r\ninterface IAmountProps {\r\n\tvalue: number | null;\r\n\tonFinalChange: (value: number) => void;\r\n\ttfProps: TextFieldProps;\r\n\tzeroIsAllowed: boolean;\r\n}\r\n\r\nexport const AmountField: FC<IAmountProps> = (props) => {\r\n\tconst [v, setV] = useState(FDouble(Number(props.value ?? \"0\")));\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...props.tfProps}\r\n\t\t\tvalue={v}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tif (!isNaN(Number(e.target.value))) {\r\n\t\t\t\t\tconst n = parseFloat(e.target.value);\r\n\r\n\t\t\t\t\tconst valid = props.zeroIsAllowed ? n >= 0 : n > 0;\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\tsetV(e.target.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tonBlur={(e) => {\r\n\t\t\t\tlet s = e.target.value.replace(\",\", \"\");\r\n\t\t\t\tconst finalValue = parseFloat(s);\r\n\t\t\t\tsetV(FDouble(finalValue));\r\n\t\t\t\tprops.onFinalChange(finalValue);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/confirmed.9ef1307f.png\";","import { FC, forwardRef, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\nimport { Category, Inventory, Stock, Unit } from \"../../lib/models-inventory\";\r\nimport {\r\n\tDataGrid,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridRowId,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { NotificationContext } from \"../../lib/notifications\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport {\r\n\tAppBar,\r\n\tcreateStyles,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tTheme,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { FDateCustom, FDouble } from \"../../lib/common\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tappBar: {\r\n\t\t\tposition: \"relative\",\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tmarginLeft: theme.spacing(2),\r\n\t\t\tflex: 1,\r\n\t\t},\r\n\t})\r\n);\r\n\r\nconst Transition = forwardRef(function Transition(\r\n\tprops: TransitionProps & { children?: React.ReactElement },\r\n\tref: React.Ref<unknown>\r\n) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface IProps {\r\n\twarehouseId: number;\r\n\tdate: Date;\r\n\tselectedIds: number[];\r\n\tonChange: (value: Inventory[]) => void;\r\n}\r\n\r\nexport const InventorySelect: FC<IProps> = ({\r\n\twarehouseId,\r\n\tdate,\r\n\tselectedIds,\r\n\tonChange,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<Inventory[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${\r\n\t\t\t\tprocess.env.REACT_APP_API\r\n\t\t\t}/inventory/report?warehouseId=${warehouseId}&date=${FDateCustom(\r\n\t\t\t\tdate,\r\n\t\t\t\t\"MM-DD-YYYY\"\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, []);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.stockName,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.description,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tconst [selectionModel, setSelectionModel] = useState<GridRowId[]>([]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<DataGrid\r\n\t\t\t\t\trows={data.filter((x) => !selectedIds.find((y) => y == x.id))}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\tautoHeight\r\n\t\t\t\t\tcheckboxSelection\r\n\t\t\t\t\tselectionModel={selectionModel}\r\n\t\t\t\t\tonSelectionModelChange={(newSelection) => {\r\n\t\t\t\t\t\tsetSelectionModel(newSelection.selectionModel);\r\n\r\n\t\t\t\t\t\tconst selectedStocks = data.filter((x) =>\r\n\t\t\t\t\t\t\tnewSelection.selectionModel.find((y) => y == x.id)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tonChange(selectedStocks);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\ninterface IInventorySelectDialogProps {\r\n\twarehouseId: number;\r\n\tdate: Date;\r\n\tselectedIds: number[];\r\n\topen: boolean;\r\n\tsetOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n\tonSelectionConfirmed: (value: Inventory[]) => void;\r\n}\r\n\r\nexport const InventorySelectDialog: FC<IInventorySelectDialogProps> = ({\r\n\twarehouseId,\r\n\tdate,\r\n\tselectedIds,\r\n\topen,\r\n\tsetOpen,\r\n\tonSelectionConfirmed,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [selection, setSelection] = useState<Inventory[]>([]);\r\n\r\n\tconst handleClose = () => setOpen(false);\r\n\tconst handleApply = async () => {\r\n\t\tif (selection.length == 0) {\r\n\t\t\tawait nc.msgbox.show(\"No item selected\", \"Select Stocks\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonSelectionConfirmed(selection);\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tfullScreen\r\n\t\t\t\tTransitionComponent={Transition}\r\n\t\t\t>\r\n\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\tSelect Stocks\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Button onClick={handleClose} color=\"inherit\">\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button onClick={handleApply} color=\"inherit\">\r\n\t\t\t\t\t\t\tApply\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<InventorySelect\r\n\t\t\t\t\twarehouseId={warehouseId}\r\n\t\t\t\t\tdate={date}\r\n\t\t\t\t\tselectedIds={selectedIds}\r\n\t\t\t\t\tonChange={(value) => setSelection(value)}\r\n\t\t\t\t/>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { RequestType, useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { Warehouse, WarehouseOrder } from \"../../../../lib/models-inventory\";\r\nimport { FDate, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport {\r\n\tNotification,\r\n\tNotificationContext,\r\n} from \"../../../../lib/notifications\";\r\nimport { GPCAccount, QuickProfile } from \"../../../../lib/models\";\r\nimport { Global } from \"../../../../lib/global\";\r\nimport { ConfirmedBadge, StyledBadge } from \"../../../../components/styled\";\r\n\r\ninterface IProps {\r\n\trefresh: Date;\r\n\twarehouseId: number;\r\n}\r\n\r\nexport const deleteRecord = async (\r\n\tid: number,\r\n\tg: Global,\r\n\treq: RequestType,\r\n\tnc: Notification,\r\n\tcallback: () => void\r\n) => {\r\n\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\"Are you sure you want to delete this record?\"\r\n\t);\r\n\tif (confirmed) {\r\n\t\tconst res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order/delete?id=${id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully deleted\");\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst dummyButton = (\r\n\t<IconButton size=\"small\" disabled>\r\n\t\t<PageviewIcon style={{ visibility: \"hidden\" }} />\r\n\t</IconButton>\r\n);\r\n\r\nconst List: FC<IProps> = ({ refresh, warehouseId }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<WarehouseOrder[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order/list?warehouseId=${warehouseId}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst create = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"create\");\r\n\t};\r\n\r\n\tconst open = (openData: WarehouseOrder, mode: PageModeType) => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: openData });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(mode);\r\n\t};\r\n\r\n\tconst openItems = (openData: WarehouseOrder, mode: PageModeType) => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ refresh: new Date(), parent: openData });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(mode);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"docDate\",\r\n\t\t\theaderName: \"Date\",\r\n\t\t\twidth: 110,\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDate(new Date(params.value as Date)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"orNo\",\r\n\t\t\theaderName: \"OR No.\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"name\",\r\n\t\t\theaderName: \"To Warehouse\",\r\n\t\t\twidth: 200,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle={`Account #${\r\n\t\t\t\t\t\t(params.getValue(params.id, \"toWarehouse\") as Warehouse)?.accountNo\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(params.getValue(params.id, \"toWarehouse\") as Warehouse)\r\n\t\t\t\t\t\t\t\t?.warehouse\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"amount\",\r\n\t\t\theaderName: \"Amount (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"confirmed\",\r\n\t\t\theaderName: \"Status\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\tlet tt = \"Unconfirmed\";\r\n\r\n\t\t\t\tconst isConfirmed = params.getValue(\r\n\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\"isConfirmed\"\r\n\t\t\t\t) as boolean;\r\n\t\t\t\tif (isConfirmed) {\r\n\t\t\t\t\tconst confirmedBy = params.getValue(\r\n\t\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\t\"confirmedBy\"\r\n\t\t\t\t\t) as QuickProfile;\r\n\r\n\t\t\t\t\ttt = `Confirmed by ${confirmedBy.name}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isConfirmed ? (\r\n\t\t\t\t\t\t\t<Box color=\"green\">\r\n\t\t\t\t\t\t\t\t<Tooltip title={tt}>\r\n\t\t\t\t\t\t\t\t\t<ConfirmedBadge\r\n\t\t\t\t\t\t\t\t\t\tbadgeContent={params.getValue(params.id, \"itemCount\")}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t\t\t\t\t\t</ConfirmedBadge>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Box color=\"lightgray\">\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Draft\">\r\n\t\t\t\t\t\t\t\t\t<DraftsIcon />\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"\",\r\n\t\t\tfilterable: false,\r\n\t\t\tsortable: false,\r\n\t\t\tdisableColumnMenu: true,\r\n\t\t\tflex: 0.3,\r\n\t\t\tcellClassName: \"row-commands\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\tconst confirmed = (params.row as WarehouseOrder).isConfirmed;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{confirmed ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as WarehouseOrder, \"view\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<PageviewIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t\t{dummyButton}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Update Items\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\topenItems(params.row as WarehouseOrder, \"view-items\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\t\tbadgeContent={params.getValue(params.id, \"itemCount\")}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<MoreHorizIcon />\r\n\t\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as WarehouseOrder, \"view\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<PageviewIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Edit\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => open(params.row as WarehouseOrder, \"edit\")}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteRecord(params.id as number, g, req, nc, getList)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Warehouse Orders</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PageCommands>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={create}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</PageCommands>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import { FC, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Warehouse, WarehouseOrder } from \"../../../../lib/models-inventory\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PageStateContext from \"../../../../lib/pageStateContext\";\r\nimport { Box, FormControl, FormLabel } from \"@material-ui/core\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { FDateCustom } from \"../../../../lib/common\";\r\nimport { WarehouseSelect } from \"../../../../components/data-select/warehouse-select\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t\"& > *\": {\r\n\t\t\t\tmargin: theme.spacing(1),\r\n\t\t\t\twidth: \"25ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t\taccountNo: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\twidth: 400,\r\n\t\t},\r\n\t})\r\n);\r\n\r\ninterface IProps {\r\n\tonSubmit: (data: WarehouseOrder) => void;\r\n\tdata: WarehouseOrder;\r\n}\r\n\r\nconst Form: FC<IProps> = ({ data, onSubmit }) => {\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst classes = useStyles();\r\n\tconst formRef = useRef<HTMLFormElement>(null);\r\n\r\n\tconst [docDate, setDocDate] = useState(data.docDate);\r\n\tconst [orNo, setORNo] = useState(data.orNo);\r\n\tconst [description, setDescription] = useState(data.description);\r\n\tconst [toWarehouse, setToWarehouse] = useState<Warehouse | undefined>(\r\n\t\tdata.toWarehouse\r\n\t);\r\n\tconst [amount, setAmount] = useState(data.amount);\r\n\tconst [remarks, setRemarks] = useState(data.remarks);\r\n\r\n\tconst [execSubmit, setExecSubmit] = useState<Date | null>(null);\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({\r\n\t\tkey: \"create-warehouseOrder-form-setExecSubmit\",\r\n\t\tdispatch: setExecSubmit,\r\n\t});\r\n\r\n\tconst getData = () => {\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tdocDate: docDate,\r\n\t\t\torNo: orNo,\r\n\t\t\tdescription: description,\r\n\t\t\ttoWarehouseId: toWarehouse?.id ?? 0,\r\n\t\t\tamount: amount,\r\n\t\t\tremarks: remarks,\r\n\t\t};\r\n\t};\r\n\r\n\tconst getErrors = () => {\r\n\t\tconst ret: string[] = [];\r\n\r\n\t\tif (toWarehouse?.id == data.warehouseId)\r\n\t\t\tret.push(\r\n\t\t\t\t'Selected \"To Warehouse\" is the same was the supplying warehouse. A warehouse cannot purchase from itself'\r\n\t\t\t);\r\n\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tconst handleSubmit = (e?: React.SyntheticEvent) => {\r\n\t\te?.preventDefault();\r\n\r\n\t\tconst isValid = formRef.current?.reportValidity();\r\n\t\tif (isValid) {\r\n\t\t\tconst errors = getErrors();\r\n\t\t\tif (errors.length > 0) {\r\n\t\t\t\tnc.snackbar.show(errors, \"error\");\r\n\t\t\t} else {\r\n\t\t\t\tconst newData = getData();\r\n\t\t\t\tonSubmit(newData);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (execSubmit) handleSubmit();\r\n\t}, [execSubmit]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form\r\n\t\t\t\tref={formRef}\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<FormLabel>Record Id</FormLabel>\r\n\t\t\t\t\t<b>{data.id == 0 ? \"[New Record]\" : data.id}</b>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Date\"\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={FDateCustom(docDate, \"YYYY-MM-DD\")}\r\n\t\t\t\t\tonChange={(e) => setDocDate(new Date(e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"OR No.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={orNo}\r\n\t\t\t\t\tonChange={(e) => setORNo(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box className={classes.accountNo}>\r\n\t\t\t\t\t<WarehouseSelect\r\n\t\t\t\t\t\tinputLabel=\"To Warehouse\"\r\n\t\t\t\t\t\tvalue={toWarehouse}\r\n\t\t\t\t\t\tonChange={(value) => setToWarehouse(value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel=\"Remarks\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvalue={remarks}\r\n\t\t\t\t\tonChange={(e) => setRemarks(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { WarehouseOrder, Warehouse } from \"../../../../lib/models-inventory\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport Form from \"./form\";\r\n\r\ninterface IProps {\r\n\tparent: Warehouse;\r\n}\r\n\r\nconst Create: FC<IProps> = ({ parent }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst handleSubmit = async (data: WarehouseOrder) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order/save`,\r\n\t\t\tdata\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToList = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"list\");\r\n\t};\r\n\r\n\tconst backToView = (data: WarehouseOrder) => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"create-warehouseOrder-form-setExecSubmit\")\r\n\t\t\t\t?.dispatch as React.Dispatch<React.SetStateAction<Date | null>>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\tconst newData = new WarehouseOrder();\r\n\tnewData.warehouseId = parent.id;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Create Warehouse Order</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={newData} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button variant=\"contained\" color=\"default\" onClick={backToList}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Create;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { WarehouseOrder } from \"../../../../lib/models-inventory\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport Form from \"./form\";\r\n\r\ninterface IProps {\r\n\tdata?: WarehouseOrder;\r\n}\r\n\r\nconst Edit: FC<IProps> = ({ data }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst handleSubmit = async (data: WarehouseOrder) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order/save`,\r\n\t\t\tdata\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToView = (data?: WarehouseOrder) => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"create-warehouseOrder-form-setExecSubmit\")\r\n\t\t\t\t?.dispatch as React.Dispatch<React.SetStateAction<Date | null>>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Update Warehouse Order</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={data} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\tonClick={() => backToView(data)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Edit;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { WarehouseOrderItem, Stock } from \"../../../../lib/models-inventory\";\r\nimport { FCurrency, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext from \"../../../../lib/pageStateContext\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { InlineList } from \"../../../../components/styled\";\r\n\r\nexport interface IItemProps {\r\n\trefresh: Date;\r\n\tparentId: number;\r\n}\r\n\r\nconst ItemsView: FC<IItemProps> = ({ refresh, parentId }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<WarehouseOrderItem[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order-items?parentId=${parentId}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"stockId\", headerName: \"Stock Id\", width: 150 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip title={params.row.stock?.description}>\r\n\t\t\t\t\t<div>{params.row.stock?.stockName}</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\t(params.getValue(params.id, \"stock\") as Stock)?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\t(params.getValue(params.id, \"stock\") as Stock)?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\ttype: \"number\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"amount\",\r\n\t\t\theaderName: \"Amount (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tlet totalAmount = 0;\r\n\tlet totalPointValue = 0;\r\n\tdata?.forEach((x) => {\r\n\t\ttotalPointValue += x.totalPointValue;\r\n\t\ttotalAmount += x.amount;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Warehouse Order Items</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<div style={{ height: 400, width: \"100%\" }}>\r\n\t\t\t\t\t\t<InlineList align=\"right\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h3>{`Total Amount: ${FCurrency(totalAmount)}`}</h3>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</InlineList>\r\n\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ItemsView;\r\n","import { Box, Button, Divider, Grid, TextField } from \"@material-ui/core\";\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport {\r\n\tWarehouseOrder,\r\n\tWarehouseOrderItem,\r\n\tInventory,\r\n} from \"../../../../lib/models-inventory\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n\tFCurrency,\r\n\tFDate,\r\n\tFDateCustom,\r\n\tFDateTime,\r\n} from \"../../../../lib/common\";\r\nimport ItemsView from \"./items-view\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { deleteRecord } from \"./list\";\r\nimport ConfirmedImage from \"../../../../assets/confirmed.png\";\r\nimport { StyledViewField, StyledViewPage } from \"../../../../components/styled\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tconfirmed: {\r\n\t\t\twidth: 300,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 50,\r\n\t\t\tright: 50,\r\n\t\t\topaity: 0.1,\r\n\t\t},\r\n\t})\r\n);\r\n\r\ninterface IProps {\r\n\tdata?: WarehouseOrder;\r\n}\r\n\r\nconst View: FC<IProps> = ({ data }) => {\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst classes = useStyles();\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\t//#region FOR RE-CHECKING BEFORE CONFIRM\r\n\tconst [items, setItems] = useState<WarehouseOrderItem[] | null>(null);\r\n\r\n\tconst getInventory = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/report?warehouseId=${\r\n\t\t\t\tdata?.warehouseId\r\n\t\t\t}&date=${FDateCustom(data?.docDate, \"MM-DD-YYYY\")}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\treturn res.data as Inventory[];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order-items?parentId=${data?.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetItems(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tlet errors: string[] = [];\r\n\r\n\t\tconst inv = await getInventory();\r\n\t\tif (inv == null) {\r\n\t\t\terrors.push(\"Unable to acquire inventory list\");\r\n\t\t} else {\r\n\t\t\titems?.forEach((x) => {\r\n\t\t\t\tif (x.stock == null) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId} does not exist anymore. It was probably deleted. Please remove the item.`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (x.qty <= 0) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is invalid. Please specify a value greater than 0`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst _inv = inv.find((y) => y.id == x.stockId);\r\n\t\t\t\t\tconst q = _inv?.qty ?? 0;\r\n\t\t\t\t\tif (x.qty > q) {\r\n\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is greater than available supply (${q})`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, []);\r\n\t//#endregion\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst backToList = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"list\");\r\n\t};\r\n\r\n\tconst edit = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"edit\");\r\n\t};\r\n\r\n\tconst updateItems = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ refresh: new Date(), parent: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view-items\");\r\n\t};\r\n\r\n\tconst create = () => {\r\n\t\tconst d = new WarehouseOrder();\r\n\t\td.warehouseId = data.warehouseId;\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: d });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"create\");\r\n\t};\r\n\r\n\tconst confirm = async () => {\r\n\t\tconst errors = await validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tnc.msgbox.show(errors, \"Save items\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\t\"Are you sure you want to confirm this document?\"\r\n\t\t);\r\n\t\tif (!confirmed) return;\r\n\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order/confirm?id=${data.id}&profileId=${g.Profile.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Document was successfully confirmed\");\r\n\t\t\tbackToList();\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>View Warehouse Order</h4>\r\n\t\t\t<StyledViewPage>\r\n\t\t\t\t{data.isConfirmed && (\r\n\t\t\t\t\t<img src={ConfirmedImage} className={classes.confirmed} />\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tId:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.id}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tDate:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{FDate(data.docDate)}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tOR No.:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.orNo}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tDescription:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.description}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tTo Warehouse:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.toWarehouse?.warehouse}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tAccount No.:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.toWarehouse?.accountNo}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tAmount:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{FCurrency(data.amount)}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tRemarks:\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t<StyledViewField>{data.remarks}</StyledViewField>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{data.isConfirmed && (\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t<Box textAlign=\"right\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t\tConfirmed by:\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item sm={10}>\r\n\t\t\t\t\t\t\t<StyledViewField>{data.confirmedBy?.name}</StyledViewField>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<small>{FDateTime(data.dateConfirmed)}</small>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<br />\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{data && <ItemsView refresh={new Date()} parentId={data.id} />}\r\n\t\t\t</StyledViewPage>\r\n\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button variant=\"contained\" color=\"default\" onClick={backToList}>\r\n\t\t\t\t\tBack to list\r\n\t\t\t\t</Button>\r\n\t\t\t\t{data.itemCount > 0 && !data.isConfirmed && (\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!data.isConfirmed && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={updateItems}>\r\n\t\t\t\t\t\t\tUpdate Items\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={edit}>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={create}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() => deleteRecord(data.id, g, req, nc, backToList)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { Box, Button, TextField, Tooltip } from \"@material-ui/core\";\r\nimport {\r\n\tWarehouseOrder,\r\n\tWarehouseOrderItem,\r\n\tInventory,\r\n\tStock,\r\n} from \"../../../../lib/models-inventory\";\r\nimport { FDate, FDateCustom, FDateTime, FDouble } from \"../../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridRowId,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../../components/loading\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport PageCommands from \"../../../../components/page-commands\";\r\nimport { NotificationContext } from \"../../../../lib/notifications\";\r\nimport { StocksSelectDialog } from \"../../../../components/data-select/stocks-select\";\r\nimport { AmountField } from \"../../../../components/amount-field\";\r\nimport { InventorySelectDialog } from \"../../../../components/data-select/inventory-select\";\r\n\r\nexport interface IItemProps {\r\n\trefresh: Date;\r\n\tparent: WarehouseOrder;\r\n}\r\n\r\nconst Items: FC<IItemProps> = ({ refresh, parent }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<WarehouseOrderItem[] | null>(null);\r\n\tconst [dataBak, setDataBak] = useState<WarehouseOrderItem[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order-items?parentId=${parent?.id}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t\tsetDataBak(JSON.parse(JSON.stringify(res.data)));\r\n\t\t}\r\n\t};\r\n\r\n\tconst getInventory = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/report?warehouseId=${\r\n\t\t\t\tparent.warehouseId\r\n\t\t\t}&date=${FDateCustom(parent.docDate, \"MM-DD-YYYY\")}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\treturn res.data as Inventory[];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst validate = async () => {\r\n\t\tlet errors: string[] = [];\r\n\r\n\t\tconst inv = await getInventory();\r\n\t\tif (inv == null) {\r\n\t\t\terrors.push(\"Unable to acquire inventory list\");\r\n\t\t} else {\r\n\t\t\tdata?.forEach((x) => {\r\n\t\t\t\tif (x.stock == null) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId} does not exist anymore. It was probably deleted. Please remove the item.`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (x.qty <= 0) {\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is invalid. Please specify a value greater than 0`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst _inv = inv.find((y) => y.id == x.stockId);\r\n\t\t\t\t\tconst q = _inv?.qty ?? 0;\r\n\t\t\t\t\tif (x.qty > q) {\r\n\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\t`Stock Id# ${x.stockId}/${x.stock?.stockName} Qty is greater than available supply (${q})`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tconst saveList = async () => {\r\n\t\tconst errors = await validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tnc.msgbox.show(errors, \"Save items\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst res = await req.post(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse-order-items/save?parentId=${parent?.id}`,\r\n\t\t\tdata\r\n\t\t);\r\n\r\n\t\tif (res.success) {\r\n\t\t\tparent = res.data;\r\n\r\n\t\t\tnc.snackbar.show(\"Items were successfully saved\");\r\n\t\t\tbackToView();\r\n\t\t}\r\n\t};\r\n\r\n\tconst isPrestine = () => JSON.stringify(data) == JSON.stringify(dataBak);\r\n\r\n\tconst backToView = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: parent });\r\n\t\t(\r\n\t\t\tps.Get(\"warehouseOrders-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst removeSelectedItems = () => {\r\n\t\tconst newData =\r\n\t\t\tdata?.filter((x) => selectionModel.find((y) => y == x.id) == null) ??\r\n\t\t\tnull;\r\n\r\n\t\tsetData(newData);\r\n\t\tsetSelectionModel([]);\r\n\t};\r\n\r\n\tconst handleAddItems = (value: Inventory[]) => {\r\n\t\t//max data id\r\n\t\tlet maxId = 0;\r\n\t\tconst lst = data\r\n\t\t\t?.map((x) => x.id)\r\n\t\t\t.sort()\r\n\t\t\t.reverse();\r\n\t\tif (lst && lst.length > 0) maxId = lst[0];\r\n\r\n\t\tconst newItems: WarehouseOrderItem[] = value.map((x, i) => {\r\n\t\t\tconst qty = 1;\r\n\t\t\treturn {\r\n\t\t\t\tid: maxId + i + 1,\r\n\t\t\t\tparentId: parent?.id,\r\n\t\t\t\tstockId: x.id,\r\n\t\t\t\tstock: x.stock,\r\n\t\t\t\tqty: qty,\r\n\t\t\t\tprice: x.price,\r\n\t\t\t\tpointValue: x.pointValue,\r\n\t\t\t\tamount: x.price,\r\n\t\t\t\ttotalPointValue: x.pointValue * qty,\r\n\t\t\t\tdiscountRate: 0,\r\n\t\t\t\tdiscount: 0,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst _data = [...(data ?? []), ...newItems];\r\n\t\tsetData(_data);\r\n\t};\r\n\r\n\tconst [openInventorySelection, setOpenInventorySelection] = useState(false);\r\n\r\n\tconst [selectionModel, setSelectionModel] = useState<GridRowId[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tparent && getList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{ field: \"stockId\", headerName: \"Stock Id\", width: 150 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<Tooltip title={params.row.stock?.description}>\r\n\t\t\t\t\t<div>{params.row.stock?.stockName}</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\twidth: 100,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\ttype: \"number\",\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<RenderCell\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\tsetData={setData}\r\n\t\t\t\t\tparams={params}\r\n\t\t\t\t\tfieldName=\"qty\"\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price (₱)\",\r\n\t\t\twidth: 150,\r\n\t\t\theaderAlign: \"right\",\r\n\t\t\talign: \"right\",\r\n\t\t\ttype: \"number\",\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\tif (!parent) return <>[No parent data]</>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box textAlign=\"center\">\r\n\t\t\t\t<b>{parent?.description}</b>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p>{`For ${parent?.toWarehouse?.warehouse}`}</p>\r\n\t\t\t\t<small>{`Account # ${parent?.warehouse?.accountNo} | Date: ${FDate(\r\n\t\t\t\t\tparent?.docDate\r\n\t\t\t\t)}`}</small>\r\n\t\t\t</Box>\r\n\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Warehouse Order Items</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<div style={{ height: 400, width: \"100%\" }}>\r\n\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t\tcheckboxSelection\r\n\t\t\t\t\t\t\tdisableSelectionOnClick\r\n\t\t\t\t\t\t\tselectionModel={selectionModel}\r\n\t\t\t\t\t\t\tonSelectionModelChange={(newSelection) =>\r\n\t\t\t\t\t\t\t\tsetSelectionModel(newSelection.selectionModel)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InventorySelectDialog\r\n\t\t\t\t\t\twarehouseId={parent.warehouseId}\r\n\t\t\t\t\t\tdate={parent.docDate}\r\n\t\t\t\t\t\tselectedIds={data.map((x) => x.stockId)}\r\n\t\t\t\t\t\topen={openInventorySelection}\r\n\t\t\t\t\t\tsetOpen={setOpenInventorySelection}\r\n\t\t\t\t\t\tonSelectionConfirmed={handleAddItems}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PageCommands>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\tif (!isPrestine()) {\r\n\t\t\t\t\t\t\t\t\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\t\t\t\t\t\t\t\t\"Some changes were not yet saved. Would you like to save these changes?\"\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tif (confirmed) {\r\n\t\t\t\t\t\t\t\t\t\tsaveList();\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbackToView();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => setOpenInventorySelection(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd Items\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={saveList}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{selectionModel.length > 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={removeSelectedItems}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tRemove Selected Items\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</PageCommands>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n\r\ninterface IProps {\r\n\tdata: WarehouseOrderItem[] | null;\r\n\tsetData: React.Dispatch<React.SetStateAction<WarehouseOrderItem[] | null>>;\r\n\tparams: GridCellParams;\r\n\tfieldName: \"qty\" | \"price\";\r\n}\r\n\r\nconst RenderCell: FC<IProps> = ({ data, setData, params, fieldName }) => {\r\n\tif (data == null) return <>[No data]</>;\r\n\r\n\tif (fieldName === \"qty\")\r\n\t\treturn (\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={data.find((x) => x.id == params.id)?.qty}\r\n\t\t\t\trequired\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tinputProps={{ style: { textAlign: \"center\" } }}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tlet ds = [...data];\r\n\t\t\t\t\tlet d = ds.find((x) => x.id == params.id);\r\n\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\tif (!isNaN(Number(e.target.value))) {\r\n\t\t\t\t\t\t\tconst n = parseInt(e.target.value);\r\n\t\t\t\t\t\t\tif (n > 0) d.qty = n;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetData && setData([...ds]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\telse\r\n\t\treturn (\r\n\t\t\t<AmountField\r\n\t\t\t\tvalue={data.find((x) => x.id == params.id)?.price ?? null}\r\n\t\t\t\tzeroIsAllowed={true}\r\n\t\t\t\tonFinalChange={(value) => {\r\n\t\t\t\t\tlet ds = [...data];\r\n\t\t\t\t\tlet d = ds.find((x) => x.id == params.id);\r\n\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\td.price = value;\r\n\t\t\t\t\t\tsetData([...ds]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\ttfProps={{\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tvariant: \"outlined\",\r\n\t\t\t\t\tinputProps: { style: { textAlign: \"right\" } },\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n};\r\n","import { FC, useContext, useState } from \"react\";\r\nimport BasePage from \"../../../base-page\";\r\nimport PageHeader from \"../../../base-page/page-header\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport List from \"./list\";\r\nimport Create from \"./create\";\r\nimport Edit from \"./edit\";\r\nimport View from \"./view\";\r\nimport Landing from \"../landing-page\";\r\nimport { WarehouseSelect } from \"../../../../components/data-select/warehouse-select\";\r\nimport { Warehouse } from \"../../../../lib/models-inventory\";\r\nimport Items, { IItemProps } from \"./items\";\r\n\r\nconst WarehouseOrder: FC = () => {\r\n\tconst [pageMode, setPageMode] = useState<PageModeType>(\"list\");\r\n\tconst [openProps, setOpenProps] = useState<object>({});\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({ key: \"warehouseOrders-setPageMode\", dispatch: setPageMode });\r\n\tps.Add({ key: \"warehouseOrders-setOpenProps\", dispatch: setOpenProps });\r\n\r\n\tconst warehouseCookie = sessionStorage.getItem(\"warehouse-selection\");\r\n\tconst [warehouse, setWarehouse] = useState<Warehouse | null>(\r\n\t\twarehouseCookie ? JSON.parse(warehouseCookie) : null\r\n\t);\r\n\r\n\tconst handleWarehouseSelect = (value: Warehouse | undefined) => {\r\n\t\tif (value) {\r\n\t\t\tsetWarehouse(value);\r\n\t\t\tsessionStorage.setItem(\"warehouse-selection\", JSON.stringify(value));\r\n\t\t} else {\r\n\t\t\tsetWarehouse(null);\r\n\t\t\tsessionStorage.removeItem(\"warehouse-selection\");\r\n\t\t}\r\n\t\tsetPageMode(\"list\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\r\n\t\t\t<WarehouseSelect\r\n\t\t\t\tvalue={warehouse ?? undefined}\r\n\t\t\t\tonChange={handleWarehouseSelect}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t{warehouse ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{pageMode == \"list\" && (\r\n\t\t\t\t\t\t<List refresh={new Date()} warehouseId={warehouse.id} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{pageMode == \"create\" && <Create parent={warehouse} />}\r\n\t\t\t\t\t{pageMode == \"edit\" && <Edit {...openProps} />}\r\n\t\t\t\t\t{pageMode == \"view\" && <View {...openProps} />}\r\n\t\t\t\t\t{pageMode == \"view-items\" && <Items {...(openProps as IItemProps)} />}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>[Please select a warehouse to work on]</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WarehouseOrder;\r\n"],"sourceRoot":""}