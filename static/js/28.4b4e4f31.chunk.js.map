{"version":3,"sources":["pages/my/landing-page/index.tsx","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","pages/my/profile/edit.tsx","pages/my/profile/view.tsx","pages/my/profile/index.tsx"],"names":["LandingMenu","g","useGlobal","go","useNavigation","className","onClick","HasGPCAccount","Landing","MenuItem","React","props","ref","tabIndex","classes","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","Edit","data","ps","useContext","PageStateContext","req","useRequest","nc","NotificationContext","handleSubmit","a","processing","show","post","process","res","success","snackbar","backToView","hide","Get","dispatch","onSubmit","Button","variant","color","Date","useStyles","makeStyles","createStyles","picture","position","right","borderRadius","View","useState","setData","getProfile","get","Email","useEffect","src","Picture","alt","Name","Profile","pageMode","setPageMode","openProps","setOpenProps","Add","key"],"mappings":"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","file":"static/js/28.4b4e4f31.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../style.scss\";\r\nimport { useGlobal, useNavigation } from \"../../../lib/hooks\";\r\n\r\nexport const LandingMenu: FC = () => {\r\n\tconst g = useGlobal();\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"my-profile\")}>Profile</Button>\r\n\t\t\t<Button onClick={() => go(\"my-uplineclaim\")}>Upline Claim</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"my-account-requests\")}>\r\n\t\t\t\tAccount Requests\r\n\t\t\t</Button>\r\n\t\t\t{g.HasGPCAccount && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t&nbsp;|&nbsp;\r\n\t\t\t\t\t<Button onClick={() => go(\"my-account\")}>Account</Button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>My</h3>\r\n\r\n\t\t\t<p>Please select where you want to go</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\r\n   * Menu item contents.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\r\n   */\n  dense: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the left and right padding is removed.\r\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\r\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\r\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  role: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  selected: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../lib/hooks\";\r\nimport { Profile } from \"../../../lib/models\";\r\nimport { NotificationContext } from \"../../../lib/notifications\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport Form from \"../../../components/common/profile/form\";\r\n\r\ninterface IProps {\r\n\tdata?: Profile;\r\n}\r\n\r\nconst Edit: FC<IProps> = ({ data }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst handleSubmit = async (data: Profile) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(`${process.env.REACT_APP_API}/profile/save`, data);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToView = (data?: Profile) => {\r\n\t\t(\r\n\t\t\tps.Get(\"myprofile-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"myprofile-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"common-profile-form-setExecSubmit\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<Date | null>\r\n\t\t\t>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Update Profile</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={data} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\tonClick={() => backToView(data)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Edit;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport PageCommands from \"../../../components/page-commands\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport { useGlobal, useRequest } from \"../../../lib/hooks\";\r\nimport { StyledViewPage } from \"../../../components/styled\";\r\nimport { Profile } from \"../../../lib/models\";\r\nimport Loading from \"../../../components/loading\";\r\nimport ProfileView from \"../../../components/common/profile/view\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tpicture: {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tright: 50,\r\n\t\t\tborderRadius: 999,\r\n\t\t},\r\n\t})\r\n);\r\n\r\nconst View: FC = () => {\r\n\tconst g = useGlobal();\r\n\tconst req = useRequest();\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tconst classes = useStyles();\r\n\r\n\tconst [data, setData] = useState<Profile | null>(null);\r\n\r\n\tconst getProfile = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/profile?email=${g.Email}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst edit = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"myprofile-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"myprofile-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"edit\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>View Profile</h4>\r\n\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<StyledViewPage>\r\n\t\t\t\t\t\t<img className={classes.picture} src={g.Picture} alt={g.Name} />\r\n\r\n\t\t\t\t\t\t<ProfileView data={data} />\r\n\t\t\t\t\t</StyledViewPage>\r\n\r\n\t\t\t\t\t{!g.HasGPCAccount && (\r\n\t\t\t\t\t\t<PageCommands>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={edit}>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</PageCommands>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport Landing from \"../landing-page\";\r\nimport Edit from \"./edit\";\r\nimport View from \"./view\";\r\n\r\nconst Profile: FC = () => {\r\n\tconst [pageMode, setPageMode] = useState<PageModeType>(\"view\");\r\n\tconst [openProps, setOpenProps] = useState<object>({});\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({ key: \"myprofile-setPageMode\", dispatch: setPageMode });\r\n\tps.Add({ key: \"myprofile-setOpenProps\", dispatch: setOpenProps });\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\t\t\t{pageMode == \"view\" && <View {...openProps} />}\r\n\t\t\t{pageMode == \"edit\" && <Edit {...openProps} />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}