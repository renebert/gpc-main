{"version":3,"sources":["pages/management/inventory/landing-page/index.tsx","components/data-select/warehouse-select.tsx","pages/management/reports/inventory/report.tsx","pages/management/reports/inventory/index.tsx"],"names":["LandingMenu","go","useNavigation","className","onClick","Landing","WarehouseSelect","value","onChange","refresh","inputLabel","req","useRequest","useState","data","setData","val","setValue","inputValue","setInputValue","getList","a","get","process","res","success","useEffect","warehouse","event","newValue","undefined","onInputChange","options","getOptionLabel","option","renderInput","params","label","required","defaultProps","Report","warehouseId","Date","date","setDate","getData","FDateCustom","columns","field","headerName","width","valueGetter","row","stock","stockName","description","unit","category","type","valueFormatter","FDouble","Number","TextField","e","target","rows","hideFooterPagination","autoHeight","InventoryReport","pageMode","setPageMode","setOpenProps","ps","useContext","PageStateContext","Add","key","dispatch","warehouseCookie","sessionStorage","getItem","JSON","parse","setWarehouse","setItem","stringify","removeItem","id"],"mappings":"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","file":"static/js/27.906785a6.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../../style.scss\";\r\nimport { useNavigation } from \"../../../../lib/hooks\";\r\n\r\nconst LandingMenu: FC = () => {\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"delivery\")}>Delivery</Button>\r\n\t\t\t<Button onClick={() => go(\"pricelist\")}>Price List</Button>\r\n\t\t\t<Button onClick={() => go(\"account-order\")}>Account Order</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse-order\")}>Warehouse Order</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"inventory-report\")}>Inventory</Button>\r\n\t\t\t&nbsp;|&nbsp;\r\n\t\t\t<Button onClick={() => go(\"units\")}>Units</Button>\r\n\t\t\t<Button onClick={() => go(\"categories\")}>Categories</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouse\")}>Warehouse</Button>\r\n\t\t\t<Button onClick={() => go(\"stocks\")}>Stocks</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Inventory</h3>\r\n\r\n\t\t\t<p>Please select your task</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useGlobal, useRequest } from \"../../lib/hooks\";\r\nimport Loading from \"../loading\";\r\nimport { Warehouse } from \"../../lib/models-inventory\";\r\n\r\ninterface IProps {\r\n\tvalue?: Warehouse;\r\n\tonChange?: (value: Warehouse | undefined) => void;\r\n\trefresh?: Date;\r\n\tinputLabel?: string;\r\n}\r\n\r\nexport const WarehouseSelect: FC<IProps> = ({\r\n\tvalue,\r\n\tonChange,\r\n\trefresh,\r\n\tinputLabel,\r\n}) => {\r\n\tconst req = useRequest();\r\n\r\n\tconst [data, setData] = useState<Warehouse[] | null>(null);\r\n\tconst [val, setValue] = useState<Warehouse | null>(null);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/inventory/warehouse/list`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t\tsetValue(value ?? null);\r\n\t\tsetInputValue(value?.warehouse ?? \"\");\r\n\t}, [refresh, value]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tvalue={val}\r\n\t\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\t\tsetValue(newValue);\r\n\t\t\t\t\t\tonChange && onChange(newValue ?? undefined);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\tonInputChange={(event, newValue) => setInputValue(newValue ?? \"\")}\r\n\t\t\t\t\toptions={data}\r\n\t\t\t\t\tgetOptionLabel={(option) => option.warehouse}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} label={inputLabel} required />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nWarehouseSelect.defaultProps = {\r\n\tinputLabel: \"Select Warehouse\",\r\n};\r\n","import { Divider, TextField } from \"@material-ui/core\";\r\nimport {\r\n\tDataGrid,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n\tGridValueGetterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport Loading from \"../../../../components/loading\";\r\nimport { FDateCustom, FDouble } from \"../../../../lib/common\";\r\nimport { useGlobal, useRequest } from \"../../../../lib/hooks\";\r\nimport { Inventory } from \"../../../../lib/models-inventory\";\r\n\r\ninterface IProps {\r\n\twarehouseId: number;\r\n}\r\n\r\nconst Report: FC<IProps> = ({ warehouseId }) => {\r\n\tconst req = useRequest();\r\n\tconst [date, setDate] = useState(new Date());\r\n\tconst [data, setData] = useState<Inventory[] | null>(null);\r\n\r\n\tconst getData = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${\r\n\t\t\t\tprocess.env.REACT_APP_API\r\n\t\t\t}/inventory/report?warehouseId=${warehouseId}&date=${FDateCustom(\r\n\t\t\t\tdate,\r\n\t\t\t\t\"MM-DD-YYYY\"\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetData();\r\n\t}, [warehouseId, date]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Stock Id\", width: 150 },\r\n\t\t{\r\n\t\t\tfield: \"stockName\",\r\n\t\t\theaderName: \"Stock Name\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.stockName,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.description,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"unit\",\r\n\t\t\theaderName: \"Unit\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.unit?.unit,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"category\",\r\n\t\t\theaderName: \"Category\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueGetter: (params: GridValueGetterParams) =>\r\n\t\t\t\tparams.row.stock?.category?.category,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"qty\",\r\n\t\t\theaderName: \"Qty\",\r\n\t\t\ttype: \"number\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"price\",\r\n\t\t\theaderName: \"Price\",\r\n\t\t\ttype: \"number\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"pointValue\",\r\n\t\t\theaderName: \"Point Value\",\r\n\t\t\ttype: \"number\",\r\n\t\t\twidth: 150,\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDouble(Number(params.value)),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TextField\r\n\t\t\t\ttype=\"date\"\r\n\t\t\t\tlabel=\"As of\"\r\n\t\t\t\tvalue={FDateCustom(date, \"YYYY-MM-DD\")}\r\n\t\t\t\tonChange={(e) => setDate(new Date(e.target.value))}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Report;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport { WarehouseSelect } from \"../../../../components/data-select/warehouse-select\";\r\nimport { Warehouse } from \"../../../../lib/models-inventory\";\r\nimport PageStateContext, {\r\n\tPageModeType,\r\n} from \"../../../../lib/pageStateContext\";\r\nimport Landing from \"../../inventory/landing-page\";\r\nimport Report from \"./report\";\r\n\r\nconst InventoryReport: FC = () => {\r\n\tconst [pageMode, setPageMode] = useState<PageModeType>(\"index\");\r\n\tconst [openProps, setOpenProps] = useState<object>({});\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({ key: \"pricelists-setPageMode\", dispatch: setPageMode });\r\n\tps.Add({ key: \"pricelists-setOpenProps\", dispatch: setOpenProps });\r\n\r\n\tconst warehouseCookie = sessionStorage.getItem(\"warehouse-selection\");\r\n\tconst [warehouse, setWarehouse] = useState<Warehouse | null>(\r\n\t\twarehouseCookie ? JSON.parse(warehouseCookie) : null\r\n\t);\r\n\r\n\tconst handleWarehouseSelect = (value: Warehouse | undefined) => {\r\n\t\tif (value) {\r\n\t\t\tsetWarehouse(value);\r\n\t\t\tsessionStorage.setItem(\"warehouse-selection\", JSON.stringify(value));\r\n\t\t} else {\r\n\t\t\tsetWarehouse(null);\r\n\t\t\tsessionStorage.removeItem(\"warehouse-selection\");\r\n\t\t}\r\n\t\tsetPageMode(\"index\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\r\n\t\t\t<WarehouseSelect\r\n\t\t\t\tvalue={warehouse ?? undefined}\r\n\t\t\t\tonChange={handleWarehouseSelect}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t{warehouse ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Inventory</h4>\r\n\t\t\t\t\t{pageMode == \"index\" && <Report warehouseId={warehouse.id} />}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>[Please select a warehouse to work on]</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default InventoryReport;\r\n"],"sourceRoot":""}