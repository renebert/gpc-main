{"version":3,"sources":["pages/management/document-reset/landing-page/index.tsx","pages/management/document-reset/warehouseorder-reset.tsx"],"names":["LandingMenu","go","useNavigation","className","onClick","Landing","WarehouseOrderReset","refresh","req","useRequest","nc","useContext","NotificationContext","useState","data","setData","getList","a","get","process","res","success","resetDocument","id","confirmbox","show","post","snackbar","useEffect","columns","field","headerName","width","valueFormatter","params","FDate","Date","value","headerAlign","align","renderCell","confirmedBy","getValue","dateConfirmed","name","FDateTime","filterable","sortable","disableColumnMenu","flex","cellClassName","title","Number","size","rows","hideFooterPagination","autoHeight"],"mappings":"gGAAA,uFAKaA,EAAkB,WAC9B,IAAQC,EAAOC,cAAPD,GAER,OACC,sBAAKE,UAAU,oBAAf,UACC,cAAC,IAAD,CAAQC,QAAS,kBAAMH,EAAG,mBAA1B,sBACA,cAAC,IAAD,CAAQG,QAAS,kBAAMH,EAAG,oBAA1B,wBACA,cAAC,IAAD,CAAQG,QAAS,kBAAMH,EAAG,uBAA1B,2BACA,cAAC,IAAD,CAAQG,QAAS,kBAAMH,EAAG,yBAA1B,iCAoBYI,UAbK,WACnB,OACC,qCACC,gDAEA,4DACA,cAACL,EAAD,IACA,uBACA,4B,gLC+GYM,UArHyB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpCC,EAAMC,cACNC,EAAKC,qBAAWC,KAEtB,EAAwBC,mBAAkC,MAA1D,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACGT,EAAIU,IAAJ,UACdC,6BADc,wCADH,QACTC,EADS,QAIPC,SACPN,EAAQK,EAAIN,MALE,2CAAH,qDASPQ,EAAa,uCAAG,WAAOC,GAAP,SAAAN,EAAA,sEACGP,EAAGc,WAAWC,KACrC,iDAFoB,kDAKFjB,EAAIkB,KAAJ,UACdP,6BADc,6CACgDI,IAN9C,cAQZF,UACPX,EAAGiB,SAASF,KAAK,iCACjBT,KAVmB,2CAAH,sDAenBY,qBAAU,WACTZ,MACE,CAACT,IAEJ,IAAMsB,EAAwB,CAC7B,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CACCF,MAAO,UACPC,WAAY,OACZC,MAAO,IACPC,eAAgB,SAACC,GAAD,OACfC,YAAM,IAAIC,KAAKF,EAAOG,UAExB,CACCP,MAAO,cACPC,WAAY,cACZC,MAAO,KAER,CACCF,MAAO,YACPC,WAAY,SACZC,MAAO,IACPM,YAAa,SACbC,MAAO,SACPC,WAAY,SAACN,GACZ,IAAMO,EAAcP,EAAOQ,SAC1BR,EAAOX,GACP,eAGKoB,EAAgBT,EAAOQ,SAC5BR,EAAOX,GACP,iBAGD,OACC,qCACC,qDAAsBkB,EAAYG,QAClC,gCAAQC,YAAUF,UAKtB,CACCb,MAAO,GACPgB,YAAY,EACZC,UAAU,EACVC,mBAAmB,EACnBC,KAAM,GACNC,cAAe,eACfV,WAAY,SAACN,GACZ,OACC,cAAC,IAAD,CAASiB,MAAK,sBAAiBjB,EAAOX,IAAtC,SACC,cAAC,IAAD,CACCnB,QAAS,kBAAMkB,EAAc8B,OAAOlB,EAAOX,MAC3C8B,KAAK,QAFN,SAIC,cAAC,IAAD,WAQN,OACC,qCACC,cAAC,UAAD,IAECvC,EACA,qCACC,2DACA,2CAAc+B,YAAUtC,MACxB,cAAC,IAAD,CACC+C,KAAMxC,EACNe,QAASA,EACT0B,sBAAsB,EACtBC,YAAU,OAIZ,cAAC,IAAD","file":"static/js/32.005fd4fb.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../../style.scss\";\r\nimport { useNavigation } from \"../../../../lib/hooks\";\r\n\r\nexport const LandingMenu: FC = () => {\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"delivery-reset\")}>Delivery</Button>\r\n\t\t\t<Button onClick={() => go(\"pricelist-reset\")}>Price List</Button>\r\n\t\t\t<Button onClick={() => go(\"accountorder-reset\")}>Account Order</Button>\r\n\t\t\t<Button onClick={() => go(\"warehouseorder-reset\")}>\r\n\t\t\t\tWarehouse Order\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Document Reset</h3>\r\n\r\n\t\t\t<p>Please select document type</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport Landing from \"./landing-page\";\r\nimport { useGlobal, useRequest } from \"../../../lib/hooks\";\r\nimport { NotificationContext } from \"../../../lib/notifications\";\r\nimport { WarehouseOrder } from \"../../../lib/models-inventory\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n\tGridValueFormatterParams,\r\n} from \"@material-ui/data-grid\";\r\nimport { FDate, FDateTime } from \"../../../lib/common\";\r\nimport { QuickProfile } from \"../../../lib/models\";\r\nimport Loading from \"../../../components/loading\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\ninterface IProps {\r\n\trefresh: Date;\r\n}\r\n\r\nconst WarehouseOrderReset: FC<IProps> = ({ refresh }) => {\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<WarehouseOrder[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(\r\n\t\t\t`${process.env.REACT_APP_API}/document-reset/warehouseorder/list`\r\n\t\t);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetDocument = async (id: number) => {\r\n\t\tconst confirmed = await nc.confirmbox.show(\r\n\t\t\t\"Are you sure you want to reset this document?\"\r\n\t\t);\r\n\t\tif (confirmed) {\r\n\t\t\tconst res = await req.post(\r\n\t\t\t\t`${process.env.REACT_APP_API}/document-reset/warehouseorder?id=${id}`\r\n\t\t\t);\r\n\t\t\tif (res.success) {\r\n\t\t\t\tnc.snackbar.show(\"Record was successfully reset\");\r\n\t\t\t\tgetList();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"docDate\",\r\n\t\t\theaderName: \"Date\",\r\n\t\t\twidth: 110,\r\n\t\t\tvalueFormatter: (params: GridValueFormatterParams) =>\r\n\t\t\t\tFDate(new Date(params.value as Date)),\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"description\",\r\n\t\t\theaderName: \"Description\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"confirmed\",\r\n\t\t\theaderName: \"Status\",\r\n\t\t\twidth: 320,\r\n\t\t\theaderAlign: \"center\",\r\n\t\t\talign: \"center\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\tconst confirmedBy = params.getValue(\r\n\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\"confirmedBy\"\r\n\t\t\t\t) as QuickProfile;\r\n\r\n\t\t\t\tconst dateConfirmed = params.getValue(\r\n\t\t\t\t\tparams.id,\r\n\t\t\t\t\t\"dateConfirmed\"\r\n\t\t\t\t) as Date;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div>{`Confirmed by ${confirmedBy.name}`}</div>\r\n\t\t\t\t\t\t<small>{FDateTime(dateConfirmed)}</small>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"\",\r\n\t\t\tfilterable: false,\r\n\t\t\tsortable: false,\r\n\t\t\tdisableColumnMenu: true,\r\n\t\t\tflex: 0.3,\r\n\t\t\tcellClassName: \"row-commands\",\r\n\t\t\trenderCell: (params: GridCellParams) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Tooltip title={`Reset Doc # ${params.id}`}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={() => resetDocument(Number(params.id))}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<HistoryIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Warehouse Order Documents</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WarehouseOrderReset;\r\n"],"sourceRoot":""}