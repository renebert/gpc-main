{"version":3,"sources":["../node_modules/@material-ui/icons/Pageview.js","../node_modules/@material-ui/icons/Edit.js","pages/management/landing-page/index.tsx","pages/management/profiles/list.tsx","pages/management/profiles/edit.tsx","pages/management/profiles/view.tsx","pages/management/profiles/index.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","LandingMenu","go","useNavigation","className","onClick","Landing","List","refresh","ps","useContext","PageStateContext","req","useRequest","NotificationContext","useState","data","setData","getList","a","get","process","res","success","open","openData","mode","Get","dispatch","useEffect","columns","field","headerName","width","filterable","sortable","disableColumnMenu","flex","cellClassName","renderCell","params","Tooltip","title","IconButton","row","size","FDateTime","style","height","rows","hideFooterPagination","autoHeight","Edit","nc","handleSubmit","processing","show","post","snackbar","backToView","hide","onSubmit","Button","variant","color","Date","View","Profiles","pageMode","setPageMode","openProps","setOpenProps","Add","key"],"mappings":"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","file":"static/js/25.e8ba29ac.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\"\n}), 'Pageview');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import { Button } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport \"../../../style.scss\";\r\nimport { useNavigation } from \"../../../lib/hooks\";\r\n\r\nexport const LandingMenu: FC = () => {\r\n\tconst { go } = useNavigation();\r\n\r\n\treturn (\r\n\t\t<div className=\"landing-page-menu\">\r\n\t\t\t<Button onClick={() => go(\"management-profiles\")}>Profiles</Button>\r\n\t\t\t<Button onClick={() => go(\"management-accounts\")}>Accounts</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Landing: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Manage</h3>\r\n\r\n\t\t\t<p>Please select your task</p>\r\n\t\t\t<LandingMenu />\r\n\t\t\t<hr />\r\n\t\t\t<br />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { RequestType, useGlobal, useRequest } from \"../../../lib/hooks\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Profile } from \"../../../lib/models\";\r\nimport { FDateTime } from \"../../../lib/common\";\r\nimport {\r\n\tDataGrid,\r\n\tGridCellParams,\r\n\tGridColDef,\r\n\tGridPageChangeParams,\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport Loading from \"../../../components/loading\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport PageCommands from \"../../../components/page-commands\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Notification, NotificationContext } from \"../../../lib/notifications\";\r\nimport { Global } from \"../../../lib/global\";\r\n\r\ninterface IProps {\r\n\trefresh: Date;\r\n}\r\n\r\nconst List: FC<IProps> = ({ refresh }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tconst [data, setData] = useState<Profile[] | null>(null);\r\n\r\n\tconst getList = async () => {\r\n\t\tconst res = await req.get(`${process.env.REACT_APP_API}/profile/list`);\r\n\t\tif (res.success) {\r\n\t\t\tsetData(res.data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst open = (openData: Profile, mode: PageModeType) => {\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: openData });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(mode);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t}, [refresh]);\r\n\r\n\tconst columns: GridColDef[] = [\r\n\t\t{ field: \"id\", headerName: \"Id\", width: 90 },\r\n\t\t{\r\n\t\t\tfield: \"fullname\",\r\n\t\t\theaderName: \"Name\",\r\n\t\t\twidth: 300,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"nickName\",\r\n\t\t\theaderName: \"Name\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"genderStr\",\r\n\t\t\theaderName: \"Gender\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: \"civilStatusStr\",\r\n\t\t\theaderName: \"Civil Status\",\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tfield: \"\",\r\n\t\t\tfilterable: false,\r\n\t\t\tsortable: false,\r\n\t\t\tdisableColumnMenu: true,\r\n\t\t\tflex: 0.3,\r\n\t\t\tcellClassName: \"row-commands\",\r\n\t\t\trenderCell: (params: GridCellParams) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={() => open(params.row as Profile, \"view\")}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PageviewIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<Tooltip title=\"Edit\">\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={() => open(params.row as Profile, \"edit\")}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Profile List</h4>\r\n\t\t\t\t\t<small>As of {FDateTime(refresh)}</small>\r\n\t\t\t\t\t<div style={{ height: 400, width: \"100%\" }}>\r\n\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\trows={data}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\thideFooterPagination={true}\r\n\t\t\t\t\t\t\tautoHeight\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport Form from \"../../../components/common/profile/form\";\r\nimport PageCommands from \"../../../components/page-commands\";\r\nimport { useGlobal, useRequest } from \"../../../lib/hooks\";\r\nimport { Profile } from \"../../../lib/models\";\r\nimport { NotificationContext } from \"../../../lib/notifications\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\n\r\ninterface IProps {\r\n\tdata?: Profile;\r\n}\r\n\r\nconst Edit: FC<IProps> = ({ data }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tconst req = useRequest();\r\n\tconst nc = useContext(NotificationContext);\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst handleSubmit = async (data: Profile) => {\r\n\t\tnc.processing.show();\r\n\t\tlet res = await req.post(`${process.env.REACT_APP_API}/profile/save`, data);\r\n\t\tif (res.success) {\r\n\t\t\tnc.snackbar.show(\"Record was successfully saved\");\r\n\t\t\tbackToView(res.data);\r\n\t\t}\r\n\t\tnc.processing.hide();\r\n\t};\r\n\r\n\tconst backToView = (data?: Profile) => {\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"view\");\r\n\t};\r\n\r\n\tconst submitForm = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"common-profile-form-setExecSubmit\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<Date | null>\r\n\t\t\t>\r\n\t\t)(new Date());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Update Profile</h4>\r\n\t\t\t<Form onSubmit={handleSubmit} data={data} />\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\tonClick={() => backToView(data)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Edit;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { FC, useContext } from \"react\";\r\nimport PageCommands from \"../../../components/page-commands\";\r\nimport { Profile } from \"../../../lib/models\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport { StyledViewPage } from \"../../../components/styled\";\r\nimport ProfileView from \"../../../components/common/profile/view\";\r\n\r\ninterface IProps {\r\n\tdata?: Profile;\r\n}\r\n\r\nconst View: FC<IProps> = ({ data }) => {\r\n\tconst ps = useContext(PageStateContext);\r\n\r\n\tif (!data) return <div>No data provided</div>;\r\n\r\n\tconst backToList = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"list\");\r\n\t};\r\n\r\n\tconst edit = () => {\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: data });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"edit\");\r\n\t};\r\n\r\n\tconst create = () => {\r\n\t\tconst d = new Profile();\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setOpenProps\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<object>\r\n\t\t\t>\r\n\t\t)({ data: d });\r\n\r\n\t\t(\r\n\t\t\tps.Get(\"management-profiles-setPageMode\")?.dispatch as React.Dispatch<\r\n\t\t\t\tReact.SetStateAction<PageModeType>\r\n\t\t\t>\r\n\t\t)(\"create\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>View Profile</h4>\r\n\r\n\t\t\t<StyledViewPage>\r\n\t\t\t\t<ProfileView data={data} />\r\n\t\t\t</StyledViewPage>\r\n\r\n\t\t\t<PageCommands>\r\n\t\t\t\t<Button variant=\"contained\" color=\"default\" onClick={backToList}>\r\n\t\t\t\t\tBack to list\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={edit}>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</Button>\r\n\t\t\t</PageCommands>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport PageStateContext, { PageModeType } from \"../../../lib/pageStateContext\";\r\nimport List from \"./list\";\r\nimport Edit from \"./edit\";\r\nimport View from \"./view\";\r\nimport Landing from \"../landing-page\";\r\n\r\nconst Profiles: FC = () => {\r\n\tconst [pageMode, setPageMode] = useState<PageModeType>(\"list\");\r\n\tconst [openProps, setOpenProps] = useState<object>({});\r\n\r\n\tconst ps = useContext(PageStateContext);\r\n\tps.Add({ key: \"management-profiles-setPageMode\", dispatch: setPageMode });\r\n\tps.Add({ key: \"management-profiles-setOpenProps\", dispatch: setOpenProps });\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Landing />\r\n\t\t\t{pageMode == \"list\" && <List refresh={new Date()} />}\r\n\t\t\t{pageMode == \"edit\" && <Edit {...openProps} />}\r\n\t\t\t{pageMode == \"view\" && <View {...openProps} />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profiles;\r\n"],"sourceRoot":""}